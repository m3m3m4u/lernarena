/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/kurs/[courseId]/lektionen/route";
exports.ids = ["app/api/kurs/[courseId]/lektionen/route"];
exports.modules = {

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fkurs%2F%5BcourseId%5D%2Flektionen%2Froute&page=%2Fapi%2Fkurs%2F%5BcourseId%5D%2Flektionen%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fkurs%2F%5BcourseId%5D%2Flektionen%2Froute.ts&appDir=D%3A%5Clernarena%5Csrc%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=D%3A%5Clernarena&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=standalone&preferredRegion=&middlewareConfig=e30%3D&isGlobalNotFoundEnabled=!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fkurs%2F%5BcourseId%5D%2Flektionen%2Froute&page=%2Fapi%2Fkurs%2F%5BcourseId%5D%2Flektionen%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fkurs%2F%5BcourseId%5D%2Flektionen%2Froute.ts&appDir=D%3A%5Clernarena%5Csrc%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=D%3A%5Clernarena&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=standalone&preferredRegion=&middlewareConfig=e30%3D&isGlobalNotFoundEnabled=! ***!

/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   handler: () => (/* binding */ handler),\n/* harmony export */   patchFetch: () => (/* binding */ patchFetch),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   workAsyncStorage: () => (/* binding */ workAsyncStorage),\n/* harmony export */   workUnitAsyncStorage: () => (/* binding */ workUnitAsyncStorage)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/next/dist/server/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/route-kind */ \"(rsc)/./node_modules/next/dist/server/route-kind.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/lib/patch-fetch */ \"(rsc)/./node_modules/next/dist/server/lib/patch-fetch.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! next/dist/server/request-meta */ \"(rsc)/./node_modules/next/dist/server/request-meta.js\");\n/* harmony import */ var next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! next/dist/server/lib/trace/tracer */ \"(rsc)/./node_modules/next/dist/server/lib/trace/tracer.js\");\n/* harmony import */ var next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var next_dist_shared_lib_router_utils_app_paths__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! next/dist/shared/lib/router/utils/app-paths */ \"next/dist/shared/lib/router/utils/app-paths\");\n/* harmony import */ var next_dist_shared_lib_router_utils_app_paths__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(next_dist_shared_lib_router_utils_app_paths__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var next_dist_server_base_http_node__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! next/dist/server/base-http/node */ \"(rsc)/./node_modules/next/dist/server/base-http/node.js\");\n/* harmony import */ var next_dist_server_base_http_node__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_base_http_node__WEBPACK_IMPORTED_MODULE_6__);\n/* harmony import */ var next_dist_server_web_spec_extension_adapters_next_request__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! next/dist/server/web/spec-extension/adapters/next-request */ \"(rsc)/./node_modules/next/dist/server/web/spec-extension/adapters/next-request.js\");\n/* harmony import */ var next_dist_server_web_spec_extension_adapters_next_request__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_web_spec_extension_adapters_next_request__WEBPACK_IMPORTED_MODULE_7__);\n/* harmony import */ var next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! next/dist/server/lib/trace/constants */ \"(rsc)/./node_modules/next/dist/server/lib/trace/constants.js\");\n/* harmony import */ var next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_8__);\n/* harmony import */ var next_dist_server_instrumentation_utils__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! next/dist/server/instrumentation/utils */ \"(rsc)/./node_modules/next/dist/server/instrumentation/utils.js\");\n/* harmony import */ var next_dist_server_send_response__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! next/dist/server/send-response */ \"(rsc)/./node_modules/next/dist/server/send-response.js\");\n/* harmony import */ var next_dist_server_web_utils__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! next/dist/server/web/utils */ \"(rsc)/./node_modules/next/dist/server/web/utils.js\");\n/* harmony import */ var next_dist_server_web_utils__WEBPACK_IMPORTED_MODULE_11___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_web_utils__WEBPACK_IMPORTED_MODULE_11__);\n/* harmony import */ var next_dist_server_lib_cache_control__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! next/dist/server/lib/cache-control */ \"(rsc)/./node_modules/next/dist/server/lib/cache-control.js\");\n/* harmony import */ var next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! next/dist/lib/constants */ \"(rsc)/./node_modules/next/dist/lib/constants.js\");\n/* harmony import */ var next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13___default = /*#__PURE__*/__webpack_require__.n(next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13__);\n/* harmony import */ var next_dist_shared_lib_no_fallback_error_external__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! next/dist/shared/lib/no-fallback-error.external */ \"next/dist/shared/lib/no-fallback-error.external\");\n/* harmony import */ var next_dist_shared_lib_no_fallback_error_external__WEBPACK_IMPORTED_MODULE_14___default = /*#__PURE__*/__webpack_require__.n(next_dist_shared_lib_no_fallback_error_external__WEBPACK_IMPORTED_MODULE_14__);\n/* harmony import */ var next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! next/dist/server/response-cache */ \"(rsc)/./node_modules/next/dist/server/response-cache/index.js\");\n/* harmony import */ var next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_15___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_15__);\n/* harmony import */ var D_lernarena_src_app_api_kurs_courseId_lektionen_route_ts__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./src/app/api/kurs/[courseId]/lektionen/route.ts */ \"(rsc)/./src/app/api/kurs/[courseId]/lektionen/route.ts\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"standalone\"\nconst routeModule = new next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/kurs/[courseId]/lektionen/route\",\n        pathname: \"/api/kurs/[courseId]/lektionen\",\n        filename: \"route\",\n        bundlePath: \"app/api/kurs/[courseId]/lektionen/route\"\n    },\n    distDir: \".next\" || 0,\n    projectDir:  false || '',\n    resolvedPagePath: \"D:\\\\lernarena\\\\src\\\\app\\\\api\\\\kurs\\\\[courseId]\\\\lektionen\\\\route.ts\",\n    nextConfigOutput,\n    userland: D_lernarena_src_app_api_kurs_courseId_lektionen_route_ts__WEBPACK_IMPORTED_MODULE_16__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { workAsyncStorage, workUnitAsyncStorage, serverHooks } = routeModule;\nfunction patchFetch() {\n    return (0,next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__.patchFetch)({\n        workAsyncStorage,\n        workUnitAsyncStorage\n    });\n}\n\nasync function handler(req, res, ctx) {\n    var _nextConfig_experimental;\n    let srcPage = \"/api/kurs/[courseId]/lektionen/route\";\n    // turbopack doesn't normalize `/index` in the page name\n    // so we need to to process dynamic routes properly\n    // TODO: fix turbopack providing differing value from webpack\n    if (false) {} else if (srcPage === '/index') {\n        // we always normalize /index specifically\n        srcPage = '/';\n    }\n    const multiZoneDraftMode = \"false\";\n    const prepareResult = await routeModule.prepare(req, res, {\n        srcPage,\n        multiZoneDraftMode\n    });\n    if (!prepareResult) {\n        res.statusCode = 400;\n        res.end('Bad Request');\n        ctx.waitUntil == null ? void 0 : ctx.waitUntil.call(ctx, Promise.resolve());\n        return null;\n    }\n    const { buildId, params, nextConfig, isDraftMode, prerenderManifest, routerServerContext, isOnDemandRevalidate, revalidateOnlyGenerated, resolvedPathname } = prepareResult;\n    const normalizedSrcPage = (0,next_dist_shared_lib_router_utils_app_paths__WEBPACK_IMPORTED_MODULE_5__.normalizeAppPath)(srcPage);\n    let isIsr = Boolean(prerenderManifest.dynamicRoutes[normalizedSrcPage] || prerenderManifest.routes[resolvedPathname]);\n    if (isIsr && !isDraftMode) {\n        const isPrerendered = Boolean(prerenderManifest.routes[resolvedPathname]);\n        const prerenderInfo = prerenderManifest.dynamicRoutes[normalizedSrcPage];\n        if (prerenderInfo) {\n            if (prerenderInfo.fallback === false && !isPrerendered) {\n                throw new next_dist_shared_lib_no_fallback_error_external__WEBPACK_IMPORTED_MODULE_14__.NoFallbackError();\n            }\n        }\n    }\n    let cacheKey = null;\n    if (isIsr && !routeModule.isDev && !isDraftMode) {\n        cacheKey = resolvedPathname;\n        // ensure /index and / is normalized to one key\n        cacheKey = cacheKey === '/index' ? '/' : cacheKey;\n    }\n    const supportsDynamicResponse = // If we're in development, we always support dynamic HTML\n    routeModule.isDev === true || // If this is not SSG or does not have static paths, then it supports\n    // dynamic HTML.\n    !isIsr;\n    // This is a revalidation request if the request is for a static\n    // page and it is not being resumed from a postponed render and\n    // it is not a dynamic RSC request then it is a revalidation\n    // request.\n    const isRevalidate = isIsr && !supportsDynamicResponse;\n    const method = req.method || 'GET';\n    const tracer = (0,next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_4__.getTracer)();\n    const activeSpan = tracer.getActiveScopeSpan();\n    const context = {\n        params,\n        prerenderManifest,\n        renderOpts: {\n            experimental: {\n                dynamicIO: Boolean(nextConfig.experimental.dynamicIO),\n                authInterrupts: Boolean(nextConfig.experimental.authInterrupts)\n            },\n            supportsDynamicResponse,\n            incrementalCache: (0,next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3__.getRequestMeta)(req, 'incrementalCache'),\n            cacheLifeProfiles: (_nextConfig_experimental = nextConfig.experimental) == null ? void 0 : _nextConfig_experimental.cacheLife,\n            isRevalidate,\n            waitUntil: ctx.waitUntil,\n            onClose: (cb)=>{\n                res.on('close', cb);\n            },\n            onAfterTaskError: undefined,\n            onInstrumentationRequestError: (error, _request, errorContext)=>routeModule.onRequestError(req, error, errorContext, routerServerContext)\n        },\n        sharedContext: {\n            buildId\n        }\n    };\n    const nodeNextReq = new next_dist_server_base_http_node__WEBPACK_IMPORTED_MODULE_6__.NodeNextRequest(req);\n    const nodeNextRes = new next_dist_server_base_http_node__WEBPACK_IMPORTED_MODULE_6__.NodeNextResponse(res);\n    const nextReq = next_dist_server_web_spec_extension_adapters_next_request__WEBPACK_IMPORTED_MODULE_7__.NextRequestAdapter.fromNodeNextRequest(nodeNextReq, (0,next_dist_server_web_spec_extension_adapters_next_request__WEBPACK_IMPORTED_MODULE_7__.signalFromNodeResponse)(res));\n    try {\n        const invokeRouteModule = async (span)=>{\n            return routeModule.handle(nextReq, context).finally(()=>{\n                if (!span) return;\n                span.setAttributes({\n                    'http.status_code': res.statusCode,\n                    'next.rsc': false\n                });\n                const rootSpanAttributes = tracer.getRootSpanAttributes();\n                // We were unable to get attributes, probably OTEL is not enabled\n                if (!rootSpanAttributes) {\n                    return;\n                }\n                if (rootSpanAttributes.get('next.span_type') !== next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_8__.BaseServerSpan.handleRequest) {\n                    console.warn(`Unexpected root span type '${rootSpanAttributes.get('next.span_type')}'. Please report this Next.js issue https://github.com/vercel/next.js`);\n                    return;\n                }\n                const route = rootSpanAttributes.get('next.route');\n                if (route) {\n                    const name = `${method} ${route}`;\n                    span.setAttributes({\n                        'next.route': route,\n                        'http.route': route,\n                        'next.span_name': name\n                    });\n                    span.updateName(name);\n                } else {\n                    span.updateName(`${method} ${req.url}`);\n                }\n            });\n        };\n        const handleResponse = async (currentSpan)=>{\n            var _cacheEntry_value;\n            const responseGenerator = async ({ previousCacheEntry })=>{\n                try {\n                    if (!(0,next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3__.getRequestMeta)(req, 'minimalMode') && isOnDemandRevalidate && revalidateOnlyGenerated && !previousCacheEntry) {\n                        res.statusCode = 404;\n                        // on-demand revalidate always sets this header\n                        res.setHeader('x-nextjs-cache', 'REVALIDATED');\n                        res.end('This page could not be found');\n                        return null;\n                    }\n                    const response = await invokeRouteModule(currentSpan);\n                    req.fetchMetrics = context.renderOpts.fetchMetrics;\n                    let pendingWaitUntil = context.renderOpts.pendingWaitUntil;\n                    // Attempt using provided waitUntil if available\n                    // if it's not we fallback to sendResponse's handling\n                    if (pendingWaitUntil) {\n                        if (ctx.waitUntil) {\n                            ctx.waitUntil(pendingWaitUntil);\n                            pendingWaitUntil = undefined;\n                        }\n                    }\n                    const cacheTags = context.renderOpts.collectedTags;\n                    // If the request is for a static response, we can cache it so long\n                    // as it's not edge.\n                    if (isIsr) {\n                        const blob = await response.blob();\n                        // Copy the headers from the response.\n                        const headers = (0,next_dist_server_web_utils__WEBPACK_IMPORTED_MODULE_11__.toNodeOutgoingHttpHeaders)(response.headers);\n                        if (cacheTags) {\n                            headers[next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13__.NEXT_CACHE_TAGS_HEADER] = cacheTags;\n                        }\n                        if (!headers['content-type'] && blob.type) {\n                            headers['content-type'] = blob.type;\n                        }\n                        const revalidate = typeof context.renderOpts.collectedRevalidate === 'undefined' || context.renderOpts.collectedRevalidate >= next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13__.INFINITE_CACHE ? false : context.renderOpts.collectedRevalidate;\n                        const expire = typeof context.renderOpts.collectedExpire === 'undefined' || context.renderOpts.collectedExpire >= next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13__.INFINITE_CACHE ? undefined : context.renderOpts.collectedExpire;\n                        // Create the cache entry for the response.\n                        const cacheEntry = {\n                            value: {\n                                kind: next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_15__.CachedRouteKind.APP_ROUTE,\n                                status: response.status,\n                                body: Buffer.from(await blob.arrayBuffer()),\n                                headers\n                            },\n                            cacheControl: {\n                                revalidate,\n                                expire\n                            }\n                        };\n                        return cacheEntry;\n                    } else {\n                        // send response without caching if not ISR\n                        await (0,next_dist_server_send_response__WEBPACK_IMPORTED_MODULE_10__.sendResponse)(nodeNextReq, nodeNextRes, response, context.renderOpts.pendingWaitUntil);\n                        return null;\n                    }\n                } catch (err) {\n                    // if this is a background revalidate we need to report\n                    // the request error here as it won't be bubbled\n                    if (previousCacheEntry == null ? void 0 : previousCacheEntry.isStale) {\n                        await routeModule.onRequestError(req, err, {\n                            routerKind: 'App Router',\n                            routePath: srcPage,\n                            routeType: 'route',\n                            revalidateReason: (0,next_dist_server_instrumentation_utils__WEBPACK_IMPORTED_MODULE_9__.getRevalidateReason)({\n                                isRevalidate,\n                                isOnDemandRevalidate\n                            })\n                        }, routerServerContext);\n                    }\n                    throw err;\n                }\n            };\n            const cacheEntry = await routeModule.handleResponse({\n                req,\n                nextConfig,\n                cacheKey,\n                routeKind: next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n                isFallback: false,\n                prerenderManifest,\n                isRoutePPREnabled: false,\n                isOnDemandRevalidate,\n                revalidateOnlyGenerated,\n                responseGenerator,\n                waitUntil: ctx.waitUntil\n            });\n            // we don't create a cacheEntry for ISR\n            if (!isIsr) {\n                return null;\n            }\n            if ((cacheEntry == null ? void 0 : (_cacheEntry_value = cacheEntry.value) == null ? void 0 : _cacheEntry_value.kind) !== next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_15__.CachedRouteKind.APP_ROUTE) {\n                var _cacheEntry_value1;\n                throw Object.defineProperty(new Error(`Invariant: app-route received invalid cache entry ${cacheEntry == null ? void 0 : (_cacheEntry_value1 = cacheEntry.value) == null ? void 0 : _cacheEntry_value1.kind}`), \"__NEXT_ERROR_CODE\", {\n                    value: \"E701\",\n                    enumerable: false,\n                    configurable: true\n                });\n            }\n            if (!(0,next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3__.getRequestMeta)(req, 'minimalMode')) {\n                res.setHeader('x-nextjs-cache', isOnDemandRevalidate ? 'REVALIDATED' : cacheEntry.isMiss ? 'MISS' : cacheEntry.isStale ? 'STALE' : 'HIT');\n            }\n            // Draft mode should never be cached\n            if (isDraftMode) {\n                res.setHeader('Cache-Control', 'private, no-cache, no-store, max-age=0, must-revalidate');\n            }\n            const headers = (0,next_dist_server_web_utils__WEBPACK_IMPORTED_MODULE_11__.fromNodeOutgoingHttpHeaders)(cacheEntry.value.headers);\n            if (!((0,next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3__.getRequestMeta)(req, 'minimalMode') && isIsr)) {\n                headers.delete(next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13__.NEXT_CACHE_TAGS_HEADER);\n            }\n            // If cache control is already set on the response we don't\n            // override it to allow users to customize it via next.config\n            if (cacheEntry.cacheControl && !res.getHeader('Cache-Control') && !headers.get('Cache-Control')) {\n                headers.set('Cache-Control', (0,next_dist_server_lib_cache_control__WEBPACK_IMPORTED_MODULE_12__.getCacheControlHeader)(cacheEntry.cacheControl));\n            }\n            await (0,next_dist_server_send_response__WEBPACK_IMPORTED_MODULE_10__.sendResponse)(nodeNextReq, nodeNextRes, new Response(cacheEntry.value.body, {\n                headers,\n                status: cacheEntry.value.status || 200\n            }));\n            return null;\n        };\n        // TODO: activeSpan code path is for when wrapped by\n        // next-server can be removed when this is no longer used\n        if (activeSpan) {\n            await handleResponse(activeSpan);\n        } else {\n            await tracer.withPropagatedContext(req.headers, ()=>tracer.trace(next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_8__.BaseServerSpan.handleRequest, {\n                    spanName: `${method} ${req.url}`,\n                    kind: next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_4__.SpanKind.SERVER,\n                    attributes: {\n                        'http.method': method,\n                        'http.target': req.url\n                    }\n                }, handleResponse));\n        }\n    } catch (err) {\n        // if we aren't wrapped by base-server handle here\n        if (!activeSpan && !(err instanceof next_dist_shared_lib_no_fallback_error_external__WEBPACK_IMPORTED_MODULE_14__.NoFallbackError)) {\n            await routeModule.onRequestError(req, err, {\n                routerKind: 'App Router',\n                routePath: normalizedSrcPage,\n                routeType: 'route',\n                revalidateReason: (0,next_dist_server_instrumentation_utils__WEBPACK_IMPORTED_MODULE_9__.getRevalidateReason)({\n                    isRevalidate,\n                    isOnDemandRevalidate\n                })\n            });\n        }\n        // rethrow so that we can handle serving error page\n        // If this is during static generation, throw the error again.\n        if (isIsr) throw err;\n        // Otherwise, send a 500 response.\n        await (0,next_dist_server_send_response__WEBPACK_IMPORTED_MODULE_10__.sendResponse)(nodeNextReq, nodeNextRes, new Response(null, {\n            status: 500\n        }));\n        return null;\n    }\n}\n\n//# sourceMappingURL=app-route.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fkurs%2F%5BcourseId%5D%2Flektionen%2Froute&page=%2Fapi%2Fkurs%2F%5BcourseId%5D%2Flektionen%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fkurs%2F%5BcourseId%5D%2Flektionen%2Froute.ts&appDir=D%3A%5Clernarena%5Csrc%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=D%3A%5Clernarena&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=standalone&preferredRegion=&middlewareConfig=e30%3D&isGlobalNotFoundEnabled=!\n");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true!":
/*!******************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true! ***!
  \******************************************************************************************************/
/***/ (() => {



/***/ }),

/***/ "(rsc)/./src/app/api/kurs/[courseId]/lektionen/route.ts":
/*!********************************************************!*\
  !*** ./src/app/api/kurs/[courseId]/lektionen/route.ts ***!
  \********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GET: () => (/* binding */ GET),\n/* harmony export */   POST: () => (/* binding */ POST)\n/* harmony export */ });\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/server */ \"(rsc)/./node_modules/next/dist/api/server.js\");\n/* harmony import */ var _lib_db__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/lib/db */ \"(rsc)/./src/lib/db.ts\");\n/* harmony import */ var _models_Lesson__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/models/Lesson */ \"(rsc)/./src/models/Lesson.ts\");\n/* harmony import */ var _models_AuditLog__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @/models/AuditLog */ \"(rsc)/./src/models/AuditLog.ts\");\n/* harmony import */ var _models_Course__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @/models/Course */ \"(rsc)/./src/models/Course.ts\");\n/* harmony import */ var next_auth_next__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! next-auth/next */ \"(rsc)/./node_modules/next-auth/next/index.js\");\n/* harmony import */ var _lib_authOptions__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @/lib/authOptions */ \"(rsc)/./src/lib/authOptions.ts\");\n/* harmony import */ var _models_User__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @/models/User */ \"(rsc)/./src/models/User.ts\");\n/* harmony import */ var _models_ClassCourseAccess__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @/models/ClassCourseAccess */ \"(rsc)/./src/models/ClassCourseAccess.ts\");\n/* harmony import */ var _lib_memory__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @/lib/memory */ \"(rsc)/./src/lib/memory.ts\");\n/* harmony import */ var _lib_lueckentext__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @/lib/lueckentext */ \"(rsc)/./src/lib/lueckentext.ts\");\n\n\n\n\n\n\n\n\n\n\n\n// Hinweis Next.js 15: params ist jetzt asynchron und muss awaited werden\nasync function GET(request, context) {\n    try {\n        const awaited = await context.params;\n        let { courseId } = awaited || {};\n        if (!courseId) {\n            // Fallback: aus URL extrahieren\n            try {\n                const url = new URL(request.url);\n                const parts = url.pathname.split('/').filter(Boolean);\n                const i = parts.findIndex((p)=>p === 'kurs');\n                if (i !== -1 && parts[i + 1]) courseId = parts[i + 1];\n            } catch  {}\n        }\n        if (!courseId) {\n            const dev = \"development\" !== 'production';\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                success: false,\n                error: 'courseId fehlt',\n                ...dev ? {\n                    hint: 'Pfad erwartet: /api/kurs/{courseId}/lektionen'\n                } : {}\n            }, {\n                status: 400\n            });\n        }\n        await (0,_lib_db__WEBPACK_IMPORTED_MODULE_1__[\"default\"])();\n        // Zugriff prüfen\n        const session = await (0,next_auth_next__WEBPACK_IMPORTED_MODULE_5__.getServerSession)(_lib_authOptions__WEBPACK_IMPORTED_MODULE_6__.authOptions);\n        const role = session?.user?.role;\n        const username = session?.user?.username;\n        // Kurs laden für Published-Check (Gäste)\n        const course = await _models_Course__WEBPACK_IMPORTED_MODULE_4__[\"default\"].findById(courseId).lean();\n        const isVirtualPool = !course && courseId === 'exercise-pool';\n        if (!course && !isVirtualPool) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                success: false,\n                error: 'Kurs nicht gefunden'\n            }, {\n                status: 404\n            });\n        }\n        if (!isVirtualPool && role === 'learner' && username) {\n            const me = await _models_User__WEBPACK_IMPORTED_MODULE_7__[\"default\"].findOne({\n                username\n            }, '_id class').lean();\n            const classId = me?.class ? String(me.class) : null;\n            if (!classId) {\n                return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                    success: false,\n                    error: 'Kein Zugriff auf diesen Kurs'\n                }, {\n                    status: 403\n                });\n            }\n            // Klassenmodus prüfen\n            const TeacherClass = (await __webpack_require__.e(/*! import() */ \"_rsc_src_models_TeacherClass_ts\").then(__webpack_require__.bind(__webpack_require__, /*! @/models/TeacherClass */ \"(rsc)/./src/models/TeacherClass.ts\"))).default;\n            const cls = await TeacherClass.findById(classId).select('courseAccess').lean();\n            const mode = cls?.courseAccess === 'all' ? 'all' : 'class';\n            if (mode === 'class') {\n                const hasAccess = await _models_ClassCourseAccess__WEBPACK_IMPORTED_MODULE_8__[\"default\"].exists({\n                    class: classId,\n                    course: courseId\n                });\n                if (!hasAccess) {\n                    return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                        success: false,\n                        error: 'Kein Zugriff auf diesen Kurs'\n                    }, {\n                        status: 403\n                    });\n                }\n            } else {\n                // 'all' -> nur veröffentlichte Kurse\n                const course = await _models_Course__WEBPACK_IMPORTED_MODULE_4__[\"default\"].findById(courseId).select('isPublished').lean();\n                if (!course?.isPublished) {\n                    return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                        success: false,\n                        error: 'Kurs ist nicht veröffentlicht'\n                    }, {\n                        status: 403\n                    });\n                }\n            }\n        }\n        // Gäste/Anonyme: nur veröffentlichte Kurse\n        if (!isVirtualPool && (!session?.user || !(role === 'author' || role === 'admin' || role === 'teacher' || role === 'learner'))) {\n            if (!course.isPublished) {\n                return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                    success: false,\n                    error: 'Kurs ist nicht veröffentlicht'\n                }, {\n                    status: 403\n                });\n            }\n        }\n        const lessons = await _models_Lesson__WEBPACK_IMPORTED_MODULE_2__[\"default\"].find({\n            courseId\n        }).sort({\n            order: 1,\n            createdAt: 1\n        });\n        const coursePayload = isVirtualPool ? {\n            _id: 'exercise-pool',\n            title: 'Übungs-Pool',\n            progressionMode: 'free',\n            isPublished: true\n        } : {\n            _id: String(course?._id),\n            title: course?.title,\n            progressionMode: course?.progressionMode || 'free',\n            isPublished: !!course?.isPublished\n        };\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            success: true,\n            lessons,\n            course: coursePayload\n        });\n    } catch (error) {\n        const details = error instanceof Error ? error.message : undefined;\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            success: false,\n            error: 'Fehler beim Laden',\n            details\n        }, {\n            status: 500\n        });\n    }\n}\nasync function POST(request, context) {\n    try {\n        const awaited = await context.params;\n        let { courseId } = awaited || {};\n        if (!courseId) {\n            // Fallback: aus URL extrahieren\n            try {\n                const url = new URL(request.url);\n                const parts = url.pathname.split('/').filter(Boolean);\n                const i = parts.findIndex((p)=>p === 'kurs');\n                if (i !== -1 && parts[i + 1]) courseId = parts[i + 1];\n            } catch  {}\n        }\n        await (0,_lib_db__WEBPACK_IMPORTED_MODULE_1__[\"default\"])();\n        // Auth vor jeglicher Verarbeitung: nur Autoren dürfen Lektionen anlegen\n        const session = await (0,next_auth_next__WEBPACK_IMPORTED_MODULE_5__.getServerSession)(_lib_authOptions__WEBPACK_IMPORTED_MODULE_6__.authOptions);\n        if (!session?.user) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                success: false,\n                error: 'Nicht authentifiziert'\n            }, {\n                status: 401\n            });\n        }\n        const userRole = session.user.role;\n        const username = session.user.username;\n        const course = await _models_Course__WEBPACK_IMPORTED_MODULE_4__[\"default\"].findById(courseId).lean();\n        if (!course) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                success: false,\n                error: 'Kurs nicht gefunden'\n            }, {\n                status: 404\n            });\n        }\n        const isOwnerTeacher = userRole === 'teacher' && course.author === username;\n        if (!isOwnerTeacher && userRole !== 'author' && userRole !== 'admin') {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                success: false,\n                error: 'Keine Berechtigung in diesem Kurs Lektionen anzulegen'\n            }, {\n                status: 403\n            });\n        }\n        const body = await request.json();\n        const { sourceLessonId, title, type, questions, content } = body;\n        const isCopy = Boolean(sourceLessonId);\n        // Parser für Text-Eingabe (Single- oder Multiple-Choice)\n        const parseFromTextBlocks = (blocksText, kind)=>{\n            const blocks = blocksText.trim().split(/\\n\\s*\\n/).map((b)=>b.trim()).filter(Boolean);\n            const parsed = [];\n            for (const block of blocks){\n                const lines = block.split(/\\n/).map((l)=>l.trim()).filter(Boolean);\n                if (lines.length < 2) continue;\n                const first = lines[0];\n                let qText = first;\n                let mediaLink = '';\n                const m = first.match(/^(.+?)\\s*\\[(.+?)\\]$/);\n                if (m) {\n                    qText = m[1].trim();\n                    mediaLink = m[2].trim();\n                }\n                const answerLines = lines.slice(1);\n                const corrects = [];\n                const wrongs = [];\n                for (const aRaw of answerLines){\n                    const a = aRaw.trim();\n                    if (kind === 'multiple-choice') {\n                        if (a.startsWith('*')) {\n                            corrects.push(a.replace(/^\\*+/, '').trim());\n                        } else {\n                            wrongs.push(a);\n                        }\n                    } else {\n                        // single-choice\n                        if (corrects.length === 0) corrects.push(a);\n                        else wrongs.push(a);\n                    }\n                }\n                const all = [\n                    ...corrects,\n                    ...wrongs\n                ].filter(Boolean);\n                if (qText && corrects.length >= 1 && all.length >= 2) {\n                    parsed.push({\n                        question: qText,\n                        mediaLink: mediaLink || undefined,\n                        correctAnswers: kind === 'multiple-choice' ? corrects : undefined,\n                        correctAnswer: kind === 'single-choice' ? corrects[0] : undefined,\n                        wrongAnswers: wrongs,\n                        allAnswers: all\n                    });\n                }\n            }\n            return parsed;\n        };\n        // vorhandene normalizeQuestions bleibt für externe Formate bestehen\n        const normalizeQuestions = (qs)=>{\n            if (!Array.isArray(qs)) return [];\n            const toText = (v)=>{\n                if (typeof v === 'string') return v;\n                if (v && typeof v === 'object') {\n                    const obj = v;\n                    const cand = obj.text ?? obj.label ?? obj.name ?? obj.value ?? obj.title;\n                    if (typeof cand === 'string') return cand;\n                    try {\n                        return JSON.stringify(v);\n                    } catch  {\n                        return String(v);\n                    }\n                }\n                return String(v ?? '');\n            };\n            return qs.map((qUnknown)=>{\n                const q = qUnknown ?? {};\n                const arraysCandidates = [\n                    q.allAnswers,\n                    q.answers,\n                    q.options,\n                    q.choices\n                ].filter(Array.isArray);\n                let all = arraysCandidates.length ? arraysCandidates[0].map(toText) : [];\n                // Mehrfachlösungen: corrects als Array priorisieren\n                let corrects = Array.isArray(q.correctAnswers) ? q.correctAnswers.map(toText) : undefined;\n                if (!corrects) {\n                    const c = q.correct ?? q.correctAnswer ?? q.solution ?? q.answer;\n                    if (Array.isArray(c)) corrects = c.map(toText);\n                    else if (typeof c !== 'undefined') corrects = [\n                        toText(c)\n                    ];\n                }\n                if ((!all || all.length === 0) && corrects && corrects.length) {\n                    const wrong = Array.isArray(q.wrongAnswers) ? q.wrongAnswers.map(toText) : [];\n                    all = [\n                        ...corrects,\n                        ...wrong\n                    ];\n                }\n                const wrong = Array.isArray(q.wrongAnswers) ? q.wrongAnswers.map(toText) : all ? all.filter((a)=>!(corrects || []).includes(a)) : [];\n                const dedupe = (arr)=>Array.from(new Set((arr || []).map((x)=>typeof x === 'string' ? x.trim() : String(x)))).filter(Boolean);\n                const finalAll = dedupe(all);\n                const finalCorrects = dedupe(corrects || []);\n                const finalWrong = dedupe(wrong.filter((w)=>!finalCorrects.includes(w)));\n                return {\n                    question: toText(q.question || q.text || ''),\n                    mediaLink: q.mediaLink || q.media || undefined,\n                    correctAnswer: finalCorrects.length === 1 ? finalCorrects[0] : undefined,\n                    correctAnswers: finalCorrects.length > 1 ? finalCorrects : undefined,\n                    wrongAnswers: finalWrong,\n                    allAnswers: finalAll\n                };\n            });\n        };\n        // NEU: präzisere Validierung + Normalisierung für Choice-Fragen\n        const validateAndNormalizeChoice = (qs, kind)=>{\n            const toText = (v)=>typeof v === 'string' ? v : String(v ?? '');\n            const uniq = (arr)=>Array.from(new Set((arr || []).map((a)=>toText(a).trim()))).filter(Boolean);\n            const errors = [];\n            const normalized = (qs || []).map((qUnknown, idx)=>{\n                const q = qUnknown ?? {};\n                const question = toText(q.question).trim();\n                const mediaLink = q.mediaLink || q.media || undefined;\n                // Korrekte Antworten sammeln\n                let corrList = [];\n                if (kind === 'single-choice') {\n                    if (q.correctAnswer) corrList = [\n                        toText(q.correctAnswer).trim()\n                    ].filter(Boolean);\n                    else if (Array.isArray(q.correctAnswers) && q.correctAnswers.length) corrList = uniq(q.correctAnswers.map(toText));\n                } else {\n                    if (Array.isArray(q.correctAnswers) && q.correctAnswers.length) corrList = uniq(q.correctAnswers.map(toText));\n                    else if (q.correctAnswer) corrList = [\n                        toText(q.correctAnswer).trim()\n                    ].filter(Boolean);\n                }\n                // allAnswers bevorzugen, sonst aus correct+wrong bauen\n                const providedAll = Array.isArray(q.allAnswers) ? q.allAnswers : [];\n                const wrongRaw = Array.isArray(q.wrongAnswers) ? q.wrongAnswers : [];\n                const builtAll = [\n                    ...corrList,\n                    ...wrongRaw.map(toText)\n                ];\n                const all = uniq((providedAll.length ? providedAll : builtAll).map(toText));\n                // Validierungen\n                if (!question) {\n                    errors.push({\n                        index: idx,\n                        error: 'Fragetext fehlt'\n                    });\n                }\n                if (kind === 'single-choice') {\n                    if (corrList.length !== 1) {\n                        errors.push({\n                            index: idx,\n                            error: 'Single-Choice benötigt genau eine richtige Antwort'\n                        });\n                    }\n                } else {\n                    if (corrList.length < 1) {\n                        errors.push({\n                            index: idx,\n                            error: 'Multiple-Choice benötigt mindestens eine richtige Antwort'\n                        });\n                    }\n                }\n                if (all.length < 2) {\n                    errors.push({\n                        index: idx,\n                        error: 'Mindestens zwei Antwortoptionen sind erforderlich'\n                    });\n                }\n                const missing = corrList.filter((a)=>!all.includes(a));\n                if (missing.length > 0) {\n                    errors.push({\n                        index: idx,\n                        error: `Richtige Antworten fehlen in allAnswers: ${missing.join(', ')}`\n                    });\n                }\n                const wrong = all.filter((a)=>!corrList.includes(a));\n                return {\n                    question,\n                    mediaLink,\n                    correctAnswer: corrList[0] || undefined,\n                    correctAnswers: kind === 'multiple-choice' ? corrList : undefined,\n                    wrongAnswers: wrong,\n                    allAnswers: all\n                };\n            });\n            return {\n                normalized,\n                errors\n            };\n        };\n        const parseMatchingBlocks = (text)=>{\n            const blocks = (text || '').trim().split(/\\n\\s*\\n+/).map((b)=>b.trim()).filter(Boolean);\n            const isMedia = (s)=>/\\.(jpg|jpeg|png|gif|webp|mp3|wav|ogg|m4a)$/i.test(s) || /^https?:\\/\\//i.test(s);\n            const result = [];\n            for (const block of blocks){\n                const lines = block.split(/\\n+/).map((l)=>l.trim()).filter(Boolean).slice(0, 5);\n                const pairs = [];\n                for (const line of lines){\n                    const [rawL, rawR] = line.split('|');\n                    if (!rawL || !rawR) continue;\n                    const l = rawL.trim();\n                    const r = rawR.trim();\n                    const leftMedia = isMedia(l) ? l : undefined;\n                    const rightMedia = isMedia(r) ? r : undefined;\n                    if (l && r) pairs.push({\n                        left: l,\n                        right: r,\n                        leftMedia,\n                        rightMedia\n                    });\n                }\n                // nur Blöcke mit mindestens 2 Paaren übernehmen\n                if (pairs.length >= 2) result.push(pairs);\n            }\n            return result;\n        };\n        let finalTitle = title;\n        let finalType = type;\n        let finalQuestions = questions;\n        let finalContent = content;\n        // Memory: Rohtext aus body.text oder content.text parsen\n        if (finalType === 'memory') {\n            const rawText = (body.text || typeof content === 'object' && content && content.text || '').toString();\n            const { pairs, errors: memErrors } = (0,_lib_memory__WEBPACK_IMPORTED_MODULE_9__.parseMemory)(rawText);\n            if (memErrors.length) {\n                return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                    success: false,\n                    error: 'Memory Validation fehlgeschlagen',\n                    details: memErrors\n                }, {\n                    status: 400\n                });\n            }\n            finalContent = {\n                raw: rawText,\n                pairs\n            };\n        }\n        // NEU: Lückentext\n        if (finalType === 'lueckentext') {\n            const md = typeof body.content === 'object' && body.content && body.content.markdown || body.markdown || '';\n            const mode = typeof body.content === 'object' && body.content && body.content.mode || 'input';\n            const { parsed, errors: ltErrors } = (0,_lib_lueckentext__WEBPACK_IMPORTED_MODULE_10__.parseLueckentext)(String(md || ''), mode === 'drag' ? 'drag' : 'input');\n            if (ltErrors.length) {\n                return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                    success: false,\n                    error: 'Lückentext Validation fehlgeschlagen',\n                    details: ltErrors\n                }, {\n                    status: 400\n                });\n            }\n            finalContent = parsed;\n        }\n        // Video validieren/normalisieren (YouTube)\n        if (finalType === 'video') {\n            const raw = typeof body.content === 'object' && body.content && body.content.youtubeUrl || body.youtubeUrl || typeof body.content === 'object' && body.content && body.content.url || '';\n            const text = typeof body.content === 'object' && body.content && body.content.text || '';\n            const url = String(raw || '').trim();\n            const videoId = extractYouTubeIdForApi(url);\n            if (!url || !videoId) {\n                return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                    success: false,\n                    error: 'Ungültiger YouTube-Link. Erlaubt sind z.B. https://www.youtube.com/watch?v=ID oder https://youtu.be/ID'\n                }, {\n                    status: 400\n                });\n            }\n            finalContent = {\n                youtubeUrl: url,\n                text: String(text || '')\n            };\n        }\n        // Snake: vereinfachte Konfiguration (difficulty -> speed mapping)\n        if (finalType === 'snake') {\n            const cfg = typeof body.content === 'object' && body.content ? body.content : {};\n            const target = Number(cfg?.targetScore) || 10;\n            const difficulty = cfg?.difficulty === 'schwer' ? 'schwer' : cfg?.difficulty === 'einfach' ? 'einfach' : 'mittel';\n            const speed = Number(cfg?.initialSpeedMs) || (difficulty === 'schwer' ? 140 : difficulty === 'einfach' ? 220 : 180);\n            const blocksRaw = Array.isArray(cfg?.blocks) ? cfg.blocks : undefined;\n            const blocks = blocksRaw && blocksRaw.every((b)=>b && typeof b.question === 'string' && Array.isArray(b.answers)) ? blocksRaw.slice(0, 50) : undefined;\n            finalContent = {\n                targetScore: target,\n                difficulty,\n                initialSpeedMs: speed,\n                ...blocks ? {\n                    blocks\n                } : {}\n            };\n        }\n        if (typeof finalType === 'string' && (finalType === 'single-choice' || finalType === 'multiple-choice') && typeof body.text === 'string' && body.text.trim()) {\n            // direkter Textparser\n            finalQuestions = parseFromTextBlocks(body.text, finalType);\n            if (!Array.isArray(finalQuestions) || finalQuestions.length === 0) {\n                const dev = \"development\" !== 'production';\n                return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                    success: false,\n                    error: 'Keine gültigen Fragen aus dem Text erkannt. Prüfe Format (Fragezeile, danach Antworten, korrekte mit * markieren, Blöcke durch Leerzeile trennen).',\n                    ...dev ? {\n                        hint: 'Beispiel: Frage 1\\n*Richtig A\\nFalsch B\\n\\nFrage 2\\n*Richtig'\n                    } : {}\n                }, {\n                    status: 400\n                });\n            }\n        }\n        if (sourceLessonId) {\n            const srcUnknown = await _models_Lesson__WEBPACK_IMPORTED_MODULE_2__[\"default\"].findById(sourceLessonId).lean();\n            if (!srcUnknown) return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                success: false,\n                error: 'Quell-Lektion nicht gefunden'\n            }, {\n                status: 404\n            });\n            const src = srcUnknown;\n            finalTitle = finalTitle || src.title;\n            finalType = finalType || src.type;\n            const srcQuestions = src.questions;\n            const srcContent = src.content;\n            if (finalType === 'matching') {\n                // Matching-Lektionen: vorhandene Fragen (mit correctAnswers left=>right) direkt übernehmen\n                if (Array.isArray(srcQuestions) && srcQuestions.length > 0) {\n                    finalQuestions = srcQuestions;\n                } else if (Array.isArray(srcContent?.questions) && srcContent.questions.length > 0) {\n                    finalQuestions = srcContent.questions;\n                } else {\n                    finalQuestions = undefined; // Fallback: später ggf. aus Text\n                }\n            } else if (finalType && finalType.includes('choice')) {\n                const copied = Array.isArray(srcQuestions) && srcQuestions.length > 0 ? srcQuestions : srcContent?.questions && Array.isArray(srcContent.questions) && srcContent.questions.length > 0 ? srcContent.questions : undefined;\n                finalQuestions = Array.isArray(finalQuestions) && finalQuestions.length > 0 ? finalQuestions : copied;\n                if (Array.isArray(finalQuestions)) {\n                    finalQuestions = normalizeQuestions(finalQuestions);\n                }\n            } else {\n                finalContent = finalContent || (srcContent ? JSON.parse(JSON.stringify(srcContent)) : {});\n            }\n        }\n        if (!finalTitle || !finalType) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                success: false,\n                error: 'Titel und Typ erforderlich'\n            }, {\n                status: 400\n            });\n        }\n        // Immer normalisieren, wenn Fragen für Choice-Typ bereitgestellt wurden\n        if ((finalType === 'single-choice' || finalType === 'multiple-choice') && Array.isArray(finalQuestions)) {\n            // Beim Kopieren (sourceLessonId) die originalen Fragen möglichst unverändert lassen\n            // und nur eine leichte Normalisierung durchführen.\n            // Strikte Validierung folgt unten nur, wenn es KEIN Kopiervorgang ist.\n            finalQuestions = normalizeQuestions(finalQuestions);\n        }\n        // Matching: aus Text mehrere Aufgaben erzeugen, wenn keine Fragen vorhanden\n        if (finalType === 'matching' && (!Array.isArray(finalQuestions) || finalQuestions.length === 0)) {\n            const text = (body.text || typeof finalContent === 'object' && finalContent && finalContent.text || '').toString();\n            const blocks = parseMatchingBlocks(text);\n            if (!blocks.length) {\n                return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                    success: false,\n                    error: 'Mindestens 2 Paare pro Aufgabe (Block) erforderlich'\n                }, {\n                    status: 400\n                });\n            }\n            const shuffle = (arr)=>arr.map((v)=>[\n                        Math.random(),\n                        v\n                    ]).sort((a, b)=>a[0] - b[0]).map(([, v])=>v);\n            finalQuestions = blocks.map((pairs)=>{\n                const lefts = pairs.map((p)=>p.left);\n                const rights = pairs.map((p)=>p.right);\n                const allCombined = shuffle([\n                    ...lefts,\n                    ...rights\n                ]);\n                const mediaFromPair = pairs.find((p)=>p.leftMedia || p.rightMedia);\n                return {\n                    question: 'Finde die passenden Paare',\n                    mediaLink: mediaFromPair?.leftMedia || mediaFromPair?.rightMedia,\n                    correctAnswers: pairs.map((p)=>`${p.left}=>${p.right}`),\n                    wrongAnswers: [],\n                    allAnswers: allCombined\n                };\n            });\n        }\n        if (finalType === 'single-choice' || finalType === 'multiple-choice') {\n            if (!Array.isArray(finalQuestions) || finalQuestions.length === 0) {\n                const dev = \"development\" !== 'production';\n                return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                    success: false,\n                    error: 'Fragen erforderlich',\n                    ...dev ? {\n                        debug: {\n                            finalType,\n                            qCount: Array.isArray(finalQuestions) ? finalQuestions.length : 0\n                        }\n                    } : {}\n                }, {\n                    status: 400\n                });\n            }\n            // Beim Kopieren eine strikte Validierung überspringen, um bestehende Altformate nicht zu blockieren\n            if (!isCopy) {\n                const { normalized, errors } = validateAndNormalizeChoice(finalQuestions, finalType);\n                if (errors.length > 0) {\n                    const dev = \"development\" !== 'production';\n                    return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                        success: false,\n                        error: 'Validierungsfehler in den Fragen',\n                        errors,\n                        ...dev ? {\n                            count: errors.length\n                        } : {}\n                    }, {\n                        status: 400\n                    });\n                }\n                finalQuestions = normalized;\n            }\n        }\n        const lastUnknown = await _models_Lesson__WEBPACK_IMPORTED_MODULE_2__[\"default\"].findOne({\n            courseId\n        }).sort({\n            order: -1\n        }).lean();\n        const last = lastUnknown ?? null;\n        const newOrder = typeof last?.order === 'number' ? last.order + 1 : 1;\n        // Legacy-Alias: 'snake' => 'minigame' (intern bevorzugt)\n        if (finalType === 'snake') {\n            // @ts-ignore – finalType ist string\n            finalType = 'minigame';\n        }\n        const isChoice = typeof finalType === 'string' && finalType.includes('choice');\n        const isMatching = finalType === 'matching';\n        const isMemory = finalType === 'memory';\n        const isLueckentext = finalType === 'lueckentext';\n        const isTextAnswer = finalType === 'text-answer';\n        const isOrdering = finalType === 'ordering';\n        // Text-Answer: jetzt Multi-Block Format { raw, blocks:[{question,answers[],media?}], caseSensitive, allowReveal, (legacy question/answer) }\n        if (isTextAnswer) {\n            const rawContent = body.content || {};\n            const raw = String(rawContent.raw || '').replace(/\\r/g, '');\n            const caseSensitive = !!rawContent.caseSensitive;\n            const allowReveal = !!rawContent.allowReveal;\n            const blocks = Array.isArray(rawContent.blocks) ? rawContent.blocks : (()=>{\n                // Fallback: falls nur question/answer kam\n                const q = String(rawContent.question || '').trim();\n                const a = String(rawContent.answer || '').trim();\n                if (q && a) return [\n                    {\n                        question: q,\n                        answers: [\n                            a\n                        ]\n                    }\n                ];\n                return [];\n            })();\n            const sanitized = blocks.filter((b)=>b && typeof b.question === 'string' && Array.isArray(b.answers) && b.answers.length > 0).map((b)=>({\n                    question: String(b.question).trim(),\n                    answers: b.answers.map((a)=>String(a).trim()).filter((a)=>a.length > 0),\n                    media: b.media && typeof b.media === 'string' ? String(b.media).trim() : undefined\n                })).slice(0, 50);\n            if (!sanitized.length) {\n                return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                    success: false,\n                    error: 'Mindestens ein gültiger Fragenblock erforderlich'\n                }, {\n                    status: 400\n                });\n            }\n            finalContent = {\n                raw,\n                blocks: sanitized,\n                caseSensitive,\n                allowReveal,\n                question: sanitized[0].question,\n                answer: sanitized[0].answers[0]\n            };\n        }\n        // Ordering: content = { items: [...], shuffledExample? optional }\n        if (isOrdering) {\n            const rawText = typeof body.content === 'object' && body.content && body.content.raw || body.raw || '';\n            const rawItems = typeof body.content === 'object' && body.content && body.content.items || body.items || [];\n            const itemsSource = Array.isArray(rawItems) && rawItems.length ? rawItems : String(rawText || '').split(/\\n/);\n            const items = Array.isArray(itemsSource) ? itemsSource.map((v)=>String(v || '').trim()).filter((v)=>v.length > 0).slice(0, 10) : [];\n            if (items.length < 2) {\n                return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                    success: false,\n                    error: 'Mindestens 2 Schritte für ordering erforderlich'\n                }, {\n                    status: 400\n                });\n            }\n            finalContent = {\n                items,\n                count: items.length,\n                raw: rawText\n            };\n        }\n        const newLessonDoc = new _models_Lesson__WEBPACK_IMPORTED_MODULE_2__[\"default\"]({\n            title: finalTitle,\n            type: finalType,\n            questions: isChoice || isMatching ? finalQuestions : undefined,\n            content: isChoice || isMatching ? undefined : finalContent || {},\n            courseId,\n            category: course.category,\n            order: newOrder\n        });\n        try {\n            const savedLesson = await newLessonDoc.save();\n            // Audit protokollieren (Fehler ignorieren)\n            try {\n                await _models_AuditLog__WEBPACK_IMPORTED_MODULE_3__[\"default\"].create({\n                    action: 'lesson.create',\n                    user: username,\n                    targetType: 'lesson',\n                    targetId: String(savedLesson._id),\n                    courseId,\n                    meta: {\n                        type: finalType\n                    }\n                });\n            } catch (e) {\n                console.warn('AuditLog lesson.create fehlgeschlagen', e);\n            }\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                success: true,\n                lesson: savedLesson\n            });\n        } catch (e) {\n            const dev = \"development\" !== 'production';\n            const err = e ?? {};\n            console.error('Validation/Speicher-Fehler:', err?.message, err?.errors);\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                success: false,\n                error: 'Validierungsfehler beim Speichern',\n                details: err?.message,\n                ...dev ? {\n                    fields: err?.errors,\n                    name: err?.name\n                } : {}\n            }, {\n                status: 400\n            });\n        }\n    } catch (error) {\n        const dev = \"development\" !== 'production';\n        const details = error instanceof Error ? error.message : undefined;\n        console.error('Fehler beim Erstellen:', details);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            success: false,\n            error: 'Fehler beim Erstellen',\n            ...dev ? {\n                details\n            } : {}\n        }, {\n            status: 500\n        });\n    }\n// (Erreicht nie: Rückgaben erfolgen innerhalb try/catch)\n}\n// Hilfsfunktion für YouTube-URL/ID im API-Kontext\nfunction extractYouTubeIdForApi(url) {\n    if (!url) return null;\n    try {\n        const u = new URL(url);\n        if (u.hostname.includes('youtu.be')) return u.pathname.replace('/', '') || null;\n        if (u.searchParams.get('v')) return u.searchParams.get('v');\n        const m = u.pathname.match(/\\/embed\\/([a-zA-Z0-9_-]{6,})/);\n        if (m) return m[1];\n        return null;\n    } catch  {\n        // erlauben auch direkte ID\n        if (/^[a-zA-Z0-9_-]{6,}$/.test(url)) return url;\n        return null;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/app/api/kurs/[courseId]/lektionen/route.ts\n");

/***/ }),

/***/ "(rsc)/./src/lib/authOptions.ts":
/*!********************************!*\
  !*** ./src/lib/authOptions.ts ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   authOptions: () => (/* binding */ authOptions),\n/* harmony export */   getSessionServer: () => (/* binding */ getSessionServer)\n/* harmony export */ });\n/* harmony import */ var next_auth_providers_credentials__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next-auth/providers/credentials */ \"(rsc)/./node_modules/next-auth/providers/credentials.js\");\n/* harmony import */ var _lib_db__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/lib/db */ \"(rsc)/./src/lib/db.ts\");\n/* harmony import */ var _models_User__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/models/User */ \"(rsc)/./src/models/User.ts\");\n/* harmony import */ var bcryptjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! bcryptjs */ \"(rsc)/./node_modules/bcryptjs/index.js\");\n/* harmony import */ var next_auth_next__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! next-auth/next */ \"(rsc)/./node_modules/next-auth/next/index.js\");\n\n\n\n\n\nconst authOptions = {\n    providers: [\n        (0,next_auth_providers_credentials__WEBPACK_IMPORTED_MODULE_0__[\"default\"])({\n            name: \"Credentials\",\n            credentials: {\n                username: {\n                    label: \"Benutzername\",\n                    type: \"text\"\n                },\n                password: {\n                    label: \"Passwort\",\n                    type: \"password\"\n                }\n            },\n            async authorize (credentials) {\n                const wantUser = String(credentials?.username || '');\n                const wantPass = String(credentials?.password || '');\n                const allowDemo = \"development\" !== 'production';\n                const hasDb = !!process.env.MONGODB_URI;\n                // Dev-Shortcut: Wenn keine DB konfiguriert ist, optional Demo-Login zulassen\n                if (!hasDb && allowDemo) {\n                    if (wantUser === 'Kopernikus' && wantPass === '12345') {\n                        return {\n                            id: 'demo',\n                            name: 'Kopernikus',\n                            username: 'Kopernikus',\n                            role: 'admin'\n                        };\n                    }\n                    throw new Error('Datenbank nicht konfiguriert (MONGODB_URI). Für Demo-Login: Benutzer \"Kopernikus\" / Passwort \"12345\" verwenden.');\n                }\n                try {\n                    await (0,_lib_db__WEBPACK_IMPORTED_MODULE_1__[\"default\"])();\n                } catch (e) {\n                    if (allowDemo && wantUser === 'Kopernikus' && wantPass === '12345') {\n                        return {\n                            id: 'demo',\n                            name: 'Kopernikus',\n                            username: 'Kopernikus',\n                            role: 'admin'\n                        };\n                    }\n                    throw e;\n                }\n                const user = await _models_User__WEBPACK_IMPORTED_MODULE_2__[\"default\"].findOne({\n                    username: credentials?.username\n                });\n                if (!user) {\n                    console.warn('[auth] user not found', credentials?.username);\n                    throw new Error(\"Benutzer nicht gefunden\");\n                }\n                if (!credentials?.password) throw new Error(\"Passwort fehlt\");\n                const isValid = await (0,bcryptjs__WEBPACK_IMPORTED_MODULE_3__.compare)(credentials.password, user.password);\n                if (!isValid) {\n                    console.warn('[auth] invalid password for', credentials?.username);\n                    throw new Error(\"Falsches Passwort\");\n                }\n                const uDoc = user;\n                const id = uDoc?._id ? String(uDoc._id) : user.id ? String(user.id) : undefined;\n                const rawRole = uDoc?.role ? String(uDoc.role) : 'learner';\n                // pending-author hat noch keine Rechte wie author\n                return {\n                    id,\n                    name: uDoc?.name,\n                    username: uDoc?.username,\n                    role: rawRole\n                }; // NextAuth v4 erwartet ein User-ähnliches Objekt\n            }\n        })\n    ],\n    session: {\n        strategy: \"jwt\"\n    },\n    pages: {\n        signIn: \"/login\",\n        error: \"/login\"\n    },\n    callbacks: {\n        async jwt ({ token, user }) {\n            if (user) {\n                const u = user;\n                if (u.id) token.id = u.id;\n                if (u.username) token.username = u.username;\n                if (u.name) token.name = u.name;\n                if (u.role) token.role = u.role;\n            }\n            // Dev-Fallback: spezieller fester Autor (nur außerhalb Produktion)\n            const tokAny = token;\n            if ( true && tokAny.username === 'Kopernikus' && tokAny.role !== 'admin') {\n                tokAny.role = 'admin';\n            }\n            return token;\n        },\n        async session ({ session, token }) {\n            if (session?.user) {\n                const t = token;\n                session.user = {\n                    ...session.user,\n                    ...t.id ? {\n                        id: t.id\n                    } : t.sub ? {\n                        id: String(t.sub)\n                    } : {},\n                    ...t.username ? {\n                        username: t.username\n                    } : {},\n                    ...t.name ? {\n                        name: t.name\n                    } : {},\n                    ...t.role ? {\n                        role: t.role\n                    } : {}\n                };\n            }\n            return session;\n        }\n    }\n};\nasync function getSessionServer() {\n    return (0,next_auth_next__WEBPACK_IMPORTED_MODULE_4__.getServerSession)(authOptions);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/lib/authOptions.ts\n");

/***/ }),

/***/ "(rsc)/./src/lib/db.ts":
/*!***********************!*\
  !*** ./src/lib/db.ts ***!
  \***********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var mongoose__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! mongoose */ \"mongoose\");\n/* harmony import */ var mongoose__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(mongoose__WEBPACK_IMPORTED_MODULE_0__);\n\n// Hinweis: Zugriff auf ENV erst bei Verbindungsaufbau, damit Build auf Vercel\n// nicht fehlschlägt, falls PREVIEW ohne DB-Env gebaut wird.\nconst getMongoUri = ()=>{\n    const uri = process.env.MONGODB_URI;\n    if (!uri) {\n        console.warn('[db] MONGODB_URI nicht gesetzt – Verbindung erst bei Aufruf fehlschlägt.');\n    }\n    return uri;\n};\n/**\n * Global is used here to maintain a cached connection across hot reloads\n * in development. This prevents connections growing exponentially\n * during API Route usage.\n */ let cached = global.mongoose;\nif (!cached) {\n    cached = global.mongoose = {\n        conn: null,\n        promise: null\n    };\n}\nasync function dbConnect() {\n    if (cached.conn) {\n        return cached.conn;\n    }\n    if (!cached.promise) {\n        const uri = getMongoUri();\n        if (!uri) throw new Error('MONGODB_URI env fehlt');\n        const opts = {\n            bufferCommands: false\n        };\n        cached.promise = mongoose__WEBPACK_IMPORTED_MODULE_0___default().connect(uri, opts);\n    }\n    try {\n        const mongooseInstance = await cached.promise;\n        cached.conn = mongooseInstance.connection;\n    } catch (e) {\n        cached.promise = null;\n        throw e;\n    }\n    return cached.conn;\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (dbConnect);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9zcmMvbGliL2RiLnRzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFnQztBQUVoQyw4RUFBOEU7QUFDOUUsNERBQTREO0FBQzVELE1BQU1DLGNBQWM7SUFDbEIsTUFBTUMsTUFBTUMsUUFBUUMsR0FBRyxDQUFDQyxXQUFXO0lBQ25DLElBQUksQ0FBQ0gsS0FBSztRQUNSSSxRQUFRQyxJQUFJLENBQUM7SUFDZjtJQUNBLE9BQU9MO0FBQ1Q7QUFVQTs7OztDQUlDLEdBQ0QsSUFBSU0sU0FBU0MsT0FBT1QsUUFBUTtBQUU1QixJQUFJLENBQUNRLFFBQVE7SUFDWEEsU0FBU0MsT0FBT1QsUUFBUSxHQUFHO1FBQUVVLE1BQU07UUFBTUMsU0FBUztJQUFLO0FBQ3pEO0FBRUEsZUFBZUM7SUFDYixJQUFJSixPQUFRRSxJQUFJLEVBQUU7UUFDaEIsT0FBT0YsT0FBUUUsSUFBSTtJQUNyQjtJQUVBLElBQUksQ0FBQ0YsT0FBUUcsT0FBTyxFQUFFO1FBQ3RCLE1BQU1ULE1BQU1EO1FBQ1osSUFBSSxDQUFDQyxLQUFLLE1BQU0sSUFBSVcsTUFBTTtRQUMxQixNQUFNQyxPQUFPO1lBQUVDLGdCQUFnQjtRQUFNO1FBQ3JDUCxPQUFRRyxPQUFPLEdBQUdYLHVEQUFnQixDQUFDRSxLQUFLWTtJQUN4QztJQUVBLElBQUk7UUFDRixNQUFNRyxtQkFBbUIsTUFBTVQsT0FBUUcsT0FBTztRQUM5Q0gsT0FBUUUsSUFBSSxHQUFHTyxpQkFBaUJDLFVBQVU7SUFDNUMsRUFBRSxPQUFPQyxHQUFHO1FBQ1ZYLE9BQVFHLE9BQU8sR0FBRztRQUNsQixNQUFNUTtJQUNSO0lBRUEsT0FBT1gsT0FBUUUsSUFBSTtBQUNyQjtBQUVBLGlFQUFlRSxTQUFTQSxFQUFDIiwic291cmNlcyI6WyJEOlxcbGVybmFyZW5hXFxzcmNcXGxpYlxcZGIudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IG1vbmdvb3NlIGZyb20gXCJtb25nb29zZVwiO1xuXG4vLyBIaW53ZWlzOiBadWdyaWZmIGF1ZiBFTlYgZXJzdCBiZWkgVmVyYmluZHVuZ3NhdWZiYXUsIGRhbWl0IEJ1aWxkIGF1ZiBWZXJjZWxcbi8vIG5pY2h0IGZlaGxzY2hsw6RndCwgZmFsbHMgUFJFVklFVyBvaG5lIERCLUVudiBnZWJhdXQgd2lyZC5cbmNvbnN0IGdldE1vbmdvVXJpID0gKCkgPT4ge1xuICBjb25zdCB1cmkgPSBwcm9jZXNzLmVudi5NT05HT0RCX1VSSTtcbiAgaWYgKCF1cmkpIHtcbiAgICBjb25zb2xlLndhcm4oJ1tkYl0gTU9OR09EQl9VUkkgbmljaHQgZ2VzZXR6dCDigJMgVmVyYmluZHVuZyBlcnN0IGJlaSBBdWZydWYgZmVobHNjaGzDpGd0LicpO1xuICB9XG4gIHJldHVybiB1cmk7XG59O1xuXG4vLyBFcndlaXRlcmUgZGFzIGdsb2JhbC1PYmpla3QgdW0gbW9uZ29vc2VcbmRlY2xhcmUgZ2xvYmFsIHtcbiAgdmFyIG1vbmdvb3NlOiB7XG4gICAgY29ubjogbW9uZ29vc2UuQ29ubmVjdGlvbiB8IG51bGw7XG4gICAgcHJvbWlzZTogUHJvbWlzZTxtb25nb29zZS5Nb25nb29zZT4gfCBudWxsO1xuICB9IHwgdW5kZWZpbmVkO1xufVxuXG4vKipcbiAqIEdsb2JhbCBpcyB1c2VkIGhlcmUgdG8gbWFpbnRhaW4gYSBjYWNoZWQgY29ubmVjdGlvbiBhY3Jvc3MgaG90IHJlbG9hZHNcbiAqIGluIGRldmVsb3BtZW50LiBUaGlzIHByZXZlbnRzIGNvbm5lY3Rpb25zIGdyb3dpbmcgZXhwb25lbnRpYWxseVxuICogZHVyaW5nIEFQSSBSb3V0ZSB1c2FnZS5cbiAqL1xubGV0IGNhY2hlZCA9IGdsb2JhbC5tb25nb29zZTtcblxuaWYgKCFjYWNoZWQpIHtcbiAgY2FjaGVkID0gZ2xvYmFsLm1vbmdvb3NlID0geyBjb25uOiBudWxsLCBwcm9taXNlOiBudWxsIH07XG59XG5cbmFzeW5jIGZ1bmN0aW9uIGRiQ29ubmVjdCgpIHtcbiAgaWYgKGNhY2hlZCEuY29ubikge1xuICAgIHJldHVybiBjYWNoZWQhLmNvbm47XG4gIH1cblxuICBpZiAoIWNhY2hlZCEucHJvbWlzZSkge1xuICBjb25zdCB1cmkgPSBnZXRNb25nb1VyaSgpO1xuICBpZiAoIXVyaSkgdGhyb3cgbmV3IEVycm9yKCdNT05HT0RCX1VSSSBlbnYgZmVobHQnKTtcbiAgY29uc3Qgb3B0cyA9IHsgYnVmZmVyQ29tbWFuZHM6IGZhbHNlIH07XG4gIGNhY2hlZCEucHJvbWlzZSA9IG1vbmdvb3NlLmNvbm5lY3QodXJpLCBvcHRzKTtcbiAgfVxuXG4gIHRyeSB7XG4gICAgY29uc3QgbW9uZ29vc2VJbnN0YW5jZSA9IGF3YWl0IGNhY2hlZCEucHJvbWlzZTtcbiAgICBjYWNoZWQhLmNvbm4gPSBtb25nb29zZUluc3RhbmNlLmNvbm5lY3Rpb247XG4gIH0gY2F0Y2ggKGUpIHtcbiAgICBjYWNoZWQhLnByb21pc2UgPSBudWxsO1xuICAgIHRocm93IGU7XG4gIH1cblxuICByZXR1cm4gY2FjaGVkIS5jb25uO1xufVxuXG5leHBvcnQgZGVmYXVsdCBkYkNvbm5lY3Q7XG4iXSwibmFtZXMiOlsibW9uZ29vc2UiLCJnZXRNb25nb1VyaSIsInVyaSIsInByb2Nlc3MiLCJlbnYiLCJNT05HT0RCX1VSSSIsImNvbnNvbGUiLCJ3YXJuIiwiY2FjaGVkIiwiZ2xvYmFsIiwiY29ubiIsInByb21pc2UiLCJkYkNvbm5lY3QiLCJFcnJvciIsIm9wdHMiLCJidWZmZXJDb21tYW5kcyIsImNvbm5lY3QiLCJtb25nb29zZUluc3RhbmNlIiwiY29ubmVjdGlvbiIsImUiXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./src/lib/db.ts\n");

/***/ }),

/***/ "(rsc)/./src/lib/lueckentext.ts":
/*!********************************!*\
  !*** ./src/lib/lueckentext.ts ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   parseLueckentext: () => (/* binding */ parseLueckentext)\n/* harmony export */ });\n// Parser: Antworten sind *wort oder phrase* (kein Zeilenumbruch). Escaped \\* wird ignoriert.\n// Ersetzt jede gefundene Antwort durch ___n___ (n = 1..k)\nfunction parseLueckentext(markdown, mode = 'input') {\n    const errors = [];\n    const warnings = [];\n    if (typeof markdown !== 'string' || !markdown.trim()) {\n        errors.push('Kein Markdown angegeben');\n        return {\n            errors,\n            warnings\n        };\n    }\n    const original = markdown;\n    const gaps = [];\n    // Manuelles Scannen für *Antwort* mit Escape-Unterstützung (\\\\*)\n    let masked = '';\n    let i = 0;\n    let gapIndex = 0;\n    while(i < original.length){\n        const ch = original[i];\n        if (ch === '*') {\n            // Prüfen ob escaped (vorheriges Zeichen ist backslash und nicht escaped selbst)\n            const prev = original[i - 1];\n            let escaped = false;\n            if (prev === '\\\\') {\n                // zähle Backslashes vor *\n                let backCount = 0;\n                let k = i - 1;\n                while(k >= 0 && original[k] === '\\\\'){\n                    backCount++;\n                    k--;\n                }\n                escaped = backCount % 2 === 1;\n            }\n            if (escaped) {\n                masked += '*';\n                i += 1;\n                continue;\n            }\n            // Öffnenden Stern gefunden -> nach schließendem suchen\n            let j = i + 1;\n            let content = '';\n            let found = false;\n            while(j < original.length){\n                const cj = original[j];\n                if (cj === '*') {\n                    // prüfen ob escaped\n                    const prev2 = original[j - 1];\n                    let escaped2 = false;\n                    if (prev2 === '\\\\') {\n                        let backCount2 = 0;\n                        let k2 = j - 1;\n                        while(k2 >= 0 && original[k2] === '\\\\'){\n                            backCount2++;\n                            k2--;\n                        }\n                        escaped2 = backCount2 % 2 === 1;\n                    }\n                    if (!escaped2) {\n                        found = true;\n                        break;\n                    }\n                }\n                content += cj;\n                j++;\n            }\n            if (found) {\n                const answer = content.trim();\n                if (!answer) {\n                    warnings.push(`Leere Lücke bei Index ${i}`);\n                    masked += original.slice(i, j + 1); // Original behalten\n                } else {\n                    gapIndex += 1;\n                    const placeholder = `___${gapIndex}___`;\n                    masked += placeholder;\n                    gaps.push({\n                        id: gapIndex,\n                        answer,\n                        placeholder,\n                        index: i\n                    });\n                }\n                i = j + 1;\n                continue;\n            } else {\n                // Kein schließender Stern -> als normaler Stern übernehmen\n                masked += '*';\n                i += 1;\n                continue;\n            }\n        }\n        masked += ch;\n        i += 1;\n    }\n    if (gaps.length === 0) errors.push('Keine *Antworten* gefunden');\n    if (gaps.length > 100) warnings.push('Sehr viele Lücken – Performance kann leiden');\n    if (errors.length) return {\n        errors,\n        warnings\n    };\n    return {\n        errors,\n        warnings,\n        parsed: {\n            markdownOriginal: original,\n            markdownMasked: masked,\n            gaps,\n            mode\n        }\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/lib/lueckentext.ts\n");

/***/ }),

/***/ "(rsc)/./src/lib/memory.ts":
/*!***************************!*\
  !*** ./src/lib/memory.ts ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   parseMemory: () => (/* binding */ parseMemory)\n/* harmony export */ });\nconst IMAGE_REGEX = /\\.(png|jpe?g|gif|webp)$/i;\nconst AUDIO_REGEX = /\\.(mp3|wav|ogg|m4a)$/i;\nconst URL_REGEX = /^https?:\\/\\//i;\nfunction detectKind(v) {\n    const value = v.trim();\n    if (IMAGE_REGEX.test(value) || URL_REGEX.test(value) && /(png|jpe?g|gif|webp)(\\?|$)/i.test(value)) return 'image';\n    if (AUDIO_REGEX.test(value) || URL_REGEX.test(value) && /(mp3|wav|ogg|m4a)(\\?|$)/i.test(value)) return 'audio';\n    return 'text';\n}\nfunction parseMemory(raw, opts) {\n    const maxPairs = opts?.maxPairs ?? 8;\n    const pairs = [];\n    const errors = [];\n    const warnings = [];\n    if (!raw || !raw.trim()) {\n        errors.push('Keine Eingabe');\n        return {\n            pairs: [],\n            errors,\n            warnings\n        };\n    }\n    const seen = new Set();\n    const lines = raw.split(/\\n+/).map((l)=>l.trim()).filter(Boolean);\n    for(let i = 0; i < lines.length; i++){\n        if (pairs.length >= maxPairs) {\n            warnings.push('Maximale Paaranzahl erreicht');\n            break;\n        }\n        const line = lines[i];\n        if (!line.includes('|')) {\n            warnings.push(`Zeile ${i + 1}: kein Trennstrich | gefunden`);\n            continue;\n        }\n        const [leftRaw, rightRaw] = line.split('|');\n        const left = (leftRaw || '').trim();\n        const right = (rightRaw || '').trim();\n        if (!left || !right) {\n            warnings.push(`Zeile ${i + 1}: unvollständiges Paar`);\n            continue;\n        }\n        if (left.toLowerCase() === right.toLowerCase()) {\n            warnings.push(`Zeile ${i + 1}: beide Seiten identisch`);\n            continue;\n        }\n        const key = `${left}:::${right}`.toLowerCase();\n        if (seen.has(key)) {\n            warnings.push(`Zeile ${i + 1}: doppeltes Paar ignoriert`);\n            continue;\n        }\n        seen.add(key);\n        const a = {\n            kind: detectKind(left),\n            value: left\n        };\n        const b = {\n            kind: detectKind(right),\n            value: right\n        };\n        pairs.push({\n            a,\n            b\n        });\n    }\n    if (pairs.length < 4) errors.push('Mindestens 4 gültige Paare erforderlich');\n    if (pairs.length > 8) errors.push('Maximal 8 Paare erlaubt');\n    return {\n        pairs,\n        errors,\n        warnings\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9zcmMvbGliL21lbW9yeS50cyIsIm1hcHBpbmdzIjoiOzs7O0FBS0EsTUFBTUEsY0FBYztBQUNwQixNQUFNQyxjQUFjO0FBQ3BCLE1BQU1DLFlBQVk7QUFFbEIsU0FBU0MsV0FBV0MsQ0FBUztJQUMzQixNQUFNQyxRQUFRRCxFQUFFRSxJQUFJO0lBQ3BCLElBQUlOLFlBQVlPLElBQUksQ0FBQ0YsVUFBV0gsVUFBVUssSUFBSSxDQUFDRixVQUFVLDhCQUE4QkUsSUFBSSxDQUFDRixRQUFTLE9BQU87SUFDNUcsSUFBSUosWUFBWU0sSUFBSSxDQUFDRixVQUFXSCxVQUFVSyxJQUFJLENBQUNGLFVBQVUsMkJBQTJCRSxJQUFJLENBQUNGLFFBQVMsT0FBTztJQUN6RyxPQUFPO0FBQ1Q7QUFFTyxTQUFTRyxZQUFZQyxHQUFXLEVBQUVDLElBQTRCO0lBQ25FLE1BQU1DLFdBQVdELE1BQU1DLFlBQVk7SUFDbkMsTUFBTUMsUUFBc0IsRUFBRTtJQUM5QixNQUFNQyxTQUFtQixFQUFFO0lBQzNCLE1BQU1DLFdBQXFCLEVBQUU7SUFDN0IsSUFBSSxDQUFDTCxPQUFPLENBQUNBLElBQUlILElBQUksSUFBSTtRQUN2Qk8sT0FBT0UsSUFBSSxDQUFDO1FBQ1osT0FBTztZQUFFSCxPQUFPLEVBQUU7WUFBRUM7WUFBUUM7UUFBUztJQUN2QztJQUNBLE1BQU1FLE9BQU8sSUFBSUM7SUFDakIsTUFBTUMsUUFBUVQsSUFBSVUsS0FBSyxDQUFDLE9BQU9DLEdBQUcsQ0FBQ0MsQ0FBQUEsSUFBS0EsRUFBRWYsSUFBSSxJQUFJZ0IsTUFBTSxDQUFDQztJQUN6RCxJQUFLLElBQUlDLElBQUksR0FBR0EsSUFBSU4sTUFBTU8sTUFBTSxFQUFFRCxJQUFLO1FBQ3JDLElBQUlaLE1BQU1hLE1BQU0sSUFBSWQsVUFBVTtZQUFFRyxTQUFTQyxJQUFJLENBQUM7WUFBaUM7UUFBTztRQUN0RixNQUFNVyxPQUFPUixLQUFLLENBQUNNLEVBQUU7UUFDckIsSUFBSSxDQUFDRSxLQUFLQyxRQUFRLENBQUMsTUFBTTtZQUFFYixTQUFTQyxJQUFJLENBQUMsQ0FBQyxNQUFNLEVBQUVTLElBQUUsRUFBRSw2QkFBNkIsQ0FBQztZQUFHO1FBQVU7UUFDakcsTUFBTSxDQUFDSSxTQUFTQyxTQUFTLEdBQUdILEtBQUtQLEtBQUssQ0FBQztRQUN2QyxNQUFNVyxPQUFPLENBQUNGLFdBQVMsRUFBQyxFQUFHdEIsSUFBSTtRQUMvQixNQUFNeUIsUUFBUSxDQUFDRixZQUFVLEVBQUMsRUFBR3ZCLElBQUk7UUFDakMsSUFBSSxDQUFDd0IsUUFBUSxDQUFDQyxPQUFPO1lBQUVqQixTQUFTQyxJQUFJLENBQUMsQ0FBQyxNQUFNLEVBQUVTLElBQUUsRUFBRSxzQkFBc0IsQ0FBQztZQUFHO1FBQVU7UUFDdEYsSUFBSU0sS0FBS0UsV0FBVyxPQUFPRCxNQUFNQyxXQUFXLElBQUk7WUFBRWxCLFNBQVNDLElBQUksQ0FBQyxDQUFDLE1BQU0sRUFBRVMsSUFBRSxFQUFFLHdCQUF3QixDQUFDO1lBQUc7UUFBVTtRQUNuSCxNQUFNUyxNQUFNLEdBQUdILEtBQUssR0FBRyxFQUFFQyxPQUFPLENBQUNDLFdBQVc7UUFDNUMsSUFBSWhCLEtBQUtrQixHQUFHLENBQUNELE1BQU07WUFBRW5CLFNBQVNDLElBQUksQ0FBQyxDQUFDLE1BQU0sRUFBRVMsSUFBRSxFQUFFLDBCQUEwQixDQUFDO1lBQUc7UUFBVTtRQUN4RlIsS0FBS21CLEdBQUcsQ0FBQ0Y7UUFDVCxNQUFNRyxJQUFnQjtZQUFFQyxNQUFNbEMsV0FBVzJCO1lBQU96QixPQUFPeUI7UUFBSztRQUM1RCxNQUFNUSxJQUFnQjtZQUFFRCxNQUFNbEMsV0FBVzRCO1lBQVExQixPQUFPMEI7UUFBTTtRQUM5RG5CLE1BQU1HLElBQUksQ0FBQztZQUFFcUI7WUFBR0U7UUFBRTtJQUNwQjtJQUNBLElBQUkxQixNQUFNYSxNQUFNLEdBQUcsR0FBR1osT0FBT0UsSUFBSSxDQUFDO0lBQ2xDLElBQUlILE1BQU1hLE1BQU0sR0FBRyxHQUFHWixPQUFPRSxJQUFJLENBQUM7SUFDbEMsT0FBTztRQUFFSDtRQUFPQztRQUFRQztJQUFTO0FBQ25DIiwic291cmNlcyI6WyJEOlxcbGVybmFyZW5hXFxzcmNcXGxpYlxcbWVtb3J5LnRzIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCB0eXBlIE1lbW9yeUNhcmRLaW5kID0gJ3RleHQnIHwgJ2ltYWdlJyB8ICdhdWRpbyc7XG5leHBvcnQgaW50ZXJmYWNlIE1lbW9yeVNpZGUgeyBraW5kOiBNZW1vcnlDYXJkS2luZDsgdmFsdWU6IHN0cmluZzsgfVxuZXhwb3J0IGludGVyZmFjZSBNZW1vcnlQYWlyIHsgYTogTWVtb3J5U2lkZTsgYjogTWVtb3J5U2lkZTsgfVxuZXhwb3J0IGludGVyZmFjZSBQYXJzZU1lbW9yeVJlc3VsdCB7IHBhaXJzOiBNZW1vcnlQYWlyW107IGVycm9yczogc3RyaW5nW107IHdhcm5pbmdzOiBzdHJpbmdbXTsgfVxuXG5jb25zdCBJTUFHRV9SRUdFWCA9IC9cXC4ocG5nfGpwZT9nfGdpZnx3ZWJwKSQvaTtcbmNvbnN0IEFVRElPX1JFR0VYID0gL1xcLihtcDN8d2F2fG9nZ3xtNGEpJC9pO1xuY29uc3QgVVJMX1JFR0VYID0gL15odHRwcz86XFwvXFwvL2k7XG5cbmZ1bmN0aW9uIGRldGVjdEtpbmQodjogc3RyaW5nKTogTWVtb3J5Q2FyZEtpbmQge1xuICBjb25zdCB2YWx1ZSA9IHYudHJpbSgpO1xuICBpZiAoSU1BR0VfUkVHRVgudGVzdCh2YWx1ZSkgfHwgKFVSTF9SRUdFWC50ZXN0KHZhbHVlKSAmJiAvKHBuZ3xqcGU/Z3xnaWZ8d2VicCkoXFw/fCQpL2kudGVzdCh2YWx1ZSkpKSByZXR1cm4gJ2ltYWdlJztcbiAgaWYgKEFVRElPX1JFR0VYLnRlc3QodmFsdWUpIHx8IChVUkxfUkVHRVgudGVzdCh2YWx1ZSkgJiYgLyhtcDN8d2F2fG9nZ3xtNGEpKFxcP3wkKS9pLnRlc3QodmFsdWUpKSkgcmV0dXJuICdhdWRpbyc7XG4gIHJldHVybiAndGV4dCc7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBwYXJzZU1lbW9yeShyYXc6IHN0cmluZywgb3B0cz86IHsgbWF4UGFpcnM/OiBudW1iZXIgfSk6IFBhcnNlTWVtb3J5UmVzdWx0IHtcbiAgY29uc3QgbWF4UGFpcnMgPSBvcHRzPy5tYXhQYWlycyA/PyA4O1xuICBjb25zdCBwYWlyczogTWVtb3J5UGFpcltdID0gW107XG4gIGNvbnN0IGVycm9yczogc3RyaW5nW10gPSBbXTtcbiAgY29uc3Qgd2FybmluZ3M6IHN0cmluZ1tdID0gW107XG4gIGlmICghcmF3IHx8ICFyYXcudHJpbSgpKSB7XG4gICAgZXJyb3JzLnB1c2goJ0tlaW5lIEVpbmdhYmUnKTtcbiAgICByZXR1cm4geyBwYWlyczogW10sIGVycm9ycywgd2FybmluZ3MgfTtcbiAgfVxuICBjb25zdCBzZWVuID0gbmV3IFNldDxzdHJpbmc+KCk7XG4gIGNvbnN0IGxpbmVzID0gcmF3LnNwbGl0KC9cXG4rLykubWFwKGwgPT4gbC50cmltKCkpLmZpbHRlcihCb29sZWFuKTtcbiAgZm9yIChsZXQgaSA9IDA7IGkgPCBsaW5lcy5sZW5ndGg7IGkrKykge1xuICAgIGlmIChwYWlycy5sZW5ndGggPj0gbWF4UGFpcnMpIHsgd2FybmluZ3MucHVzaCgnTWF4aW1hbGUgUGFhcmFuemFobCBlcnJlaWNodCcpOyBicmVhazsgfVxuICAgIGNvbnN0IGxpbmUgPSBsaW5lc1tpXTtcbiAgICBpZiAoIWxpbmUuaW5jbHVkZXMoJ3wnKSkgeyB3YXJuaW5ncy5wdXNoKGBaZWlsZSAke2krMX06IGtlaW4gVHJlbm5zdHJpY2ggfCBnZWZ1bmRlbmApOyBjb250aW51ZTsgfVxuICAgIGNvbnN0IFtsZWZ0UmF3LCByaWdodFJhd10gPSBsaW5lLnNwbGl0KCd8Jyk7XG4gICAgY29uc3QgbGVmdCA9IChsZWZ0UmF3fHwnJykudHJpbSgpO1xuICAgIGNvbnN0IHJpZ2h0ID0gKHJpZ2h0UmF3fHwnJykudHJpbSgpO1xuICAgIGlmICghbGVmdCB8fCAhcmlnaHQpIHsgd2FybmluZ3MucHVzaChgWmVpbGUgJHtpKzF9OiB1bnZvbGxzdMOkbmRpZ2VzIFBhYXJgKTsgY29udGludWU7IH1cbiAgICBpZiAobGVmdC50b0xvd2VyQ2FzZSgpID09PSByaWdodC50b0xvd2VyQ2FzZSgpKSB7IHdhcm5pbmdzLnB1c2goYFplaWxlICR7aSsxfTogYmVpZGUgU2VpdGVuIGlkZW50aXNjaGApOyBjb250aW51ZTsgfVxuICAgIGNvbnN0IGtleSA9IGAke2xlZnR9Ojo6JHtyaWdodH1gLnRvTG93ZXJDYXNlKCk7XG4gICAgaWYgKHNlZW4uaGFzKGtleSkpIHsgd2FybmluZ3MucHVzaChgWmVpbGUgJHtpKzF9OiBkb3BwZWx0ZXMgUGFhciBpZ25vcmllcnRgKTsgY29udGludWU7IH1cbiAgICBzZWVuLmFkZChrZXkpO1xuICAgIGNvbnN0IGE6IE1lbW9yeVNpZGUgPSB7IGtpbmQ6IGRldGVjdEtpbmQobGVmdCksIHZhbHVlOiBsZWZ0IH07XG4gICAgY29uc3QgYjogTWVtb3J5U2lkZSA9IHsga2luZDogZGV0ZWN0S2luZChyaWdodCksIHZhbHVlOiByaWdodCB9O1xuICAgIHBhaXJzLnB1c2goeyBhLCBiIH0pO1xuICB9XG4gIGlmIChwYWlycy5sZW5ndGggPCA0KSBlcnJvcnMucHVzaCgnTWluZGVzdGVucyA0IGfDvGx0aWdlIFBhYXJlIGVyZm9yZGVybGljaCcpO1xuICBpZiAocGFpcnMubGVuZ3RoID4gOCkgZXJyb3JzLnB1c2goJ01heGltYWwgOCBQYWFyZSBlcmxhdWJ0Jyk7XG4gIHJldHVybiB7IHBhaXJzLCBlcnJvcnMsIHdhcm5pbmdzIH07XG59XG4iXSwibmFtZXMiOlsiSU1BR0VfUkVHRVgiLCJBVURJT19SRUdFWCIsIlVSTF9SRUdFWCIsImRldGVjdEtpbmQiLCJ2IiwidmFsdWUiLCJ0cmltIiwidGVzdCIsInBhcnNlTWVtb3J5IiwicmF3Iiwib3B0cyIsIm1heFBhaXJzIiwicGFpcnMiLCJlcnJvcnMiLCJ3YXJuaW5ncyIsInB1c2giLCJzZWVuIiwiU2V0IiwibGluZXMiLCJzcGxpdCIsIm1hcCIsImwiLCJmaWx0ZXIiLCJCb29sZWFuIiwiaSIsImxlbmd0aCIsImxpbmUiLCJpbmNsdWRlcyIsImxlZnRSYXciLCJyaWdodFJhdyIsImxlZnQiLCJyaWdodCIsInRvTG93ZXJDYXNlIiwia2V5IiwiaGFzIiwiYWRkIiwiYSIsImtpbmQiLCJiIl0sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./src/lib/memory.ts\n");

/***/ }),

/***/ "(rsc)/./src/models/AuditLog.ts":
/*!********************************!*\
  !*** ./src/models/AuditLog.ts ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var mongoose__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! mongoose */ \"mongoose\");\n/* harmony import */ var mongoose__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(mongoose__WEBPACK_IMPORTED_MODULE_0__);\n\nconst AuditLogSchema = new mongoose__WEBPACK_IMPORTED_MODULE_0__.Schema({\n    action: {\n        type: String,\n        required: true,\n        index: true\n    },\n    user: {\n        type: String,\n        index: true\n    },\n    targetType: {\n        type: String,\n        index: true\n    },\n    targetId: {\n        type: String,\n        index: true\n    },\n    courseId: {\n        type: String,\n        index: true\n    },\n    meta: {\n        type: mongoose__WEBPACK_IMPORTED_MODULE_0__.Schema.Types.Mixed\n    },\n    createdAt: {\n        type: Date,\n        default: Date.now,\n        index: true\n    }\n});\ntry {\n    if (mongoose__WEBPACK_IMPORTED_MODULE_0___default().modelNames().includes('AuditLog')) {\n        mongoose__WEBPACK_IMPORTED_MODULE_0___default().deleteModel('AuditLog');\n    }\n} catch  {}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (mongoose__WEBPACK_IMPORTED_MODULE_0___default().model('AuditLog', AuditLogSchema));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9zcmMvbW9kZWxzL0F1ZGl0TG9nLnRzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFzRDtBQVl0RCxNQUFNRSxpQkFBaUIsSUFBSUQsNENBQU1BLENBQVk7SUFDM0NFLFFBQVE7UUFBRUMsTUFBTUM7UUFBUUMsVUFBVTtRQUFNQyxPQUFPO0lBQUs7SUFDcERDLE1BQU07UUFBRUosTUFBTUM7UUFBUUUsT0FBTztJQUFLO0lBQ2xDRSxZQUFZO1FBQUVMLE1BQU1DO1FBQVFFLE9BQU87SUFBSztJQUN4Q0csVUFBVTtRQUFFTixNQUFNQztRQUFRRSxPQUFPO0lBQUs7SUFDdENJLFVBQVU7UUFBRVAsTUFBTUM7UUFBUUUsT0FBTztJQUFLO0lBQ3RDSyxNQUFNO1FBQUVSLE1BQU1ILDRDQUFNQSxDQUFDWSxLQUFLLENBQUNDLEtBQUs7SUFBQztJQUNqQ0MsV0FBVztRQUFFWCxNQUFNWTtRQUFNQyxTQUFTRCxLQUFLRSxHQUFHO1FBQUVYLE9BQU87SUFBSztBQUMxRDtBQUVBLElBQUk7SUFDRixJQUFJUCwwREFBbUIsR0FBR29CLFFBQVEsQ0FBQyxhQUFhO1FBQzlDcEIsMkRBQW9CLENBQUM7SUFDdkI7QUFDRixFQUFFLE9BQU0sQ0FBQztBQUVULGlFQUFlQSxxREFBYyxDQUFZLFlBQVlFLGVBQWVBLEVBQUMiLCJzb3VyY2VzIjpbIkQ6XFxsZXJuYXJlbmFcXHNyY1xcbW9kZWxzXFxBdWRpdExvZy50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgbW9uZ29vc2UsIHsgU2NoZW1hLCBEb2N1bWVudCB9IGZyb20gJ21vbmdvb3NlJztcblxuZXhwb3J0IGludGVyZmFjZSBJQXVkaXRMb2cgZXh0ZW5kcyBEb2N1bWVudCB7XG4gIGFjdGlvbjogc3RyaW5nOyAgICAgICAgICAgICAgLy8gZS5nLiBsZXNzb24uY3JlYXRlLCBsZXNzb24udXBkYXRlLCBjb3Vyc2UuZGVsZXRlXG4gIHVzZXI/OiBzdHJpbmc7ICAgICAgICAgICAgICAgLy8gdXNlcm5hbWVcbiAgdGFyZ2V0VHlwZT86IHN0cmluZzsgICAgICAgICAvLyAnbGVzc29uJyB8ICdjb3Vyc2UnIHwgJ3Byb2dyZXNzJyB8IGV0Yy5cbiAgdGFyZ2V0SWQ/OiBzdHJpbmc7ICAgICAgICAgICAvLyBJRCBzdHJpbmdcbiAgY291cnNlSWQ/OiBzdHJpbmc7ICAgICAgICAgICAvLyBvcHRpb25hbCBCZXp1Z1xuICBtZXRhPzogUmVjb3JkPHN0cmluZywgdW5rbm93bj47XG4gIGNyZWF0ZWRBdDogRGF0ZTtcbn1cblxuY29uc3QgQXVkaXRMb2dTY2hlbWEgPSBuZXcgU2NoZW1hPElBdWRpdExvZz4oe1xuICBhY3Rpb246IHsgdHlwZTogU3RyaW5nLCByZXF1aXJlZDogdHJ1ZSwgaW5kZXg6IHRydWUgfSxcbiAgdXNlcjogeyB0eXBlOiBTdHJpbmcsIGluZGV4OiB0cnVlIH0sXG4gIHRhcmdldFR5cGU6IHsgdHlwZTogU3RyaW5nLCBpbmRleDogdHJ1ZSB9LFxuICB0YXJnZXRJZDogeyB0eXBlOiBTdHJpbmcsIGluZGV4OiB0cnVlIH0sXG4gIGNvdXJzZUlkOiB7IHR5cGU6IFN0cmluZywgaW5kZXg6IHRydWUgfSxcbiAgbWV0YTogeyB0eXBlOiBTY2hlbWEuVHlwZXMuTWl4ZWQgfSxcbiAgY3JlYXRlZEF0OiB7IHR5cGU6IERhdGUsIGRlZmF1bHQ6IERhdGUubm93LCBpbmRleDogdHJ1ZSB9XG59KTtcblxudHJ5IHtcbiAgaWYgKG1vbmdvb3NlLm1vZGVsTmFtZXMoKS5pbmNsdWRlcygnQXVkaXRMb2cnKSkge1xuICAgIG1vbmdvb3NlLmRlbGV0ZU1vZGVsKCdBdWRpdExvZycpO1xuICB9XG59IGNhdGNoIHt9XG5cbmV4cG9ydCBkZWZhdWx0IG1vbmdvb3NlLm1vZGVsPElBdWRpdExvZz4oJ0F1ZGl0TG9nJywgQXVkaXRMb2dTY2hlbWEpO1xuIl0sIm5hbWVzIjpbIm1vbmdvb3NlIiwiU2NoZW1hIiwiQXVkaXRMb2dTY2hlbWEiLCJhY3Rpb24iLCJ0eXBlIiwiU3RyaW5nIiwicmVxdWlyZWQiLCJpbmRleCIsInVzZXIiLCJ0YXJnZXRUeXBlIiwidGFyZ2V0SWQiLCJjb3Vyc2VJZCIsIm1ldGEiLCJUeXBlcyIsIk1peGVkIiwiY3JlYXRlZEF0IiwiRGF0ZSIsImRlZmF1bHQiLCJub3ciLCJtb2RlbE5hbWVzIiwiaW5jbHVkZXMiLCJkZWxldGVNb2RlbCIsIm1vZGVsIl0sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./src/models/AuditLog.ts\n");

/***/ }),

/***/ "(rsc)/./src/models/ClassCourseAccess.ts":
/*!*****************************************!*\
  !*** ./src/models/ClassCourseAccess.ts ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var mongoose__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! mongoose */ \"mongoose\");\n/* harmony import */ var mongoose__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(mongoose__WEBPACK_IMPORTED_MODULE_0__);\n\nconst ClassCourseAccessSchema = new mongoose__WEBPACK_IMPORTED_MODULE_0__.Schema({\n    class: {\n        type: mongoose__WEBPACK_IMPORTED_MODULE_0__.Schema.Types.ObjectId,\n        ref: 'TeacherClass',\n        required: true,\n        index: true\n    },\n    course: {\n        type: mongoose__WEBPACK_IMPORTED_MODULE_0__.Schema.Types.ObjectId,\n        ref: 'Course',\n        required: true,\n        index: true\n    },\n    enabledBy: {\n        type: mongoose__WEBPACK_IMPORTED_MODULE_0__.Schema.Types.ObjectId,\n        ref: 'User',\n        required: true,\n        index: true\n    },\n    mode: {\n        type: String,\n        enum: [\n            'link',\n            'copy'\n        ],\n        default: 'link'\n    },\n    createdAt: {\n        type: Date,\n        default: Date.now\n    },\n    updatedAt: {\n        type: Date,\n        default: Date.now\n    }\n});\n// pro Klasse-Kurs nur einmal zulassen\nClassCourseAccessSchema.index({\n    class: 1,\n    course: 1\n}, {\n    unique: true\n});\nClassCourseAccessSchema.pre('save', function(next) {\n    this.updatedAt = new Date();\n    next();\n});\nClassCourseAccessSchema.pre('findOneAndUpdate', function(next) {\n    this.set({\n        updatedAt: new Date()\n    });\n    next();\n});\ntry {\n    if (mongoose__WEBPACK_IMPORTED_MODULE_0___default().modelNames().includes('ClassCourseAccess')) {\n        mongoose__WEBPACK_IMPORTED_MODULE_0___default().deleteModel('ClassCourseAccess');\n    }\n} catch  {}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (mongoose__WEBPACK_IMPORTED_MODULE_0___default().model('ClassCourseAccess', ClassCourseAccessSchema));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9zcmMvbW9kZWxzL0NsYXNzQ291cnNlQWNjZXNzLnRzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFzRDtBQVd0RCxNQUFNRSwwQkFBMEIsSUFBSUQsNENBQU1BLENBQXFCO0lBQzdERSxPQUFPO1FBQUVDLE1BQU1ILDRDQUFNQSxDQUFDSSxLQUFLLENBQUNDLFFBQVE7UUFBRUMsS0FBSztRQUFnQkMsVUFBVTtRQUFNQyxPQUFPO0lBQUs7SUFDdkZDLFFBQVE7UUFBRU4sTUFBTUgsNENBQU1BLENBQUNJLEtBQUssQ0FBQ0MsUUFBUTtRQUFFQyxLQUFLO1FBQVVDLFVBQVU7UUFBTUMsT0FBTztJQUFLO0lBQ2xGRSxXQUFXO1FBQUVQLE1BQU1ILDRDQUFNQSxDQUFDSSxLQUFLLENBQUNDLFFBQVE7UUFBRUMsS0FBSztRQUFRQyxVQUFVO1FBQU1DLE9BQU87SUFBSztJQUNuRkcsTUFBTTtRQUFFUixNQUFNUztRQUFRQyxNQUFNO1lBQUM7WUFBTztTQUFPO1FBQUVDLFNBQVM7SUFBTztJQUM3REMsV0FBVztRQUFFWixNQUFNYTtRQUFNRixTQUFTRSxLQUFLQyxHQUFHO0lBQUM7SUFDM0NDLFdBQVc7UUFBRWYsTUFBTWE7UUFBTUYsU0FBU0UsS0FBS0MsR0FBRztJQUFDO0FBQzdDO0FBRUEsc0NBQXNDO0FBQ3RDaEIsd0JBQXdCTyxLQUFLLENBQUM7SUFBRU4sT0FBTztJQUFHTyxRQUFRO0FBQUUsR0FBRztJQUFFVSxRQUFRO0FBQUs7QUFFdEVsQix3QkFBd0JtQixHQUFHLENBQUMsUUFBUSxTQUFTQyxJQUFJO0lBQUcsSUFBSSxDQUFDSCxTQUFTLEdBQUcsSUFBSUY7SUFBUUs7QUFBUTtBQUN6RnBCLHdCQUF3Qm1CLEdBQUcsQ0FBQyxvQkFBb0IsU0FBU0MsSUFBSTtJQUFHLElBQUksQ0FBQ0MsR0FBRyxDQUFDO1FBQUVKLFdBQVcsSUFBSUY7SUFBTztJQUFJSztBQUFRO0FBRTdHLElBQUk7SUFDRixJQUFJdEIsMERBQW1CLEdBQUd5QixRQUFRLENBQUMsc0JBQXNCO1FBQ3ZEekIsMkRBQW9CLENBQUM7SUFDdkI7QUFDRixFQUFFLE9BQU0sQ0FBQztBQUVULGlFQUFlQSxxREFBYyxDQUFxQixxQkFBcUJFLHdCQUF3QkEsRUFBQyIsInNvdXJjZXMiOlsiRDpcXGxlcm5hcmVuYVxcc3JjXFxtb2RlbHNcXENsYXNzQ291cnNlQWNjZXNzLnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBtb25nb29zZSwgeyBTY2hlbWEsIERvY3VtZW50IH0gZnJvbSAnbW9uZ29vc2UnO1xuXG5leHBvcnQgaW50ZXJmYWNlIElDbGFzc0NvdXJzZUFjY2VzcyBleHRlbmRzIERvY3VtZW50IHtcbiAgY2xhc3M6IG1vbmdvb3NlLlR5cGVzLk9iamVjdElkOyAvLyBUZWFjaGVyQ2xhc3NcbiAgY291cnNlOiBtb25nb29zZS5UeXBlcy5PYmplY3RJZDsgLy8gQ291cnNlXG4gIGVuYWJsZWRCeTogbW9uZ29vc2UuVHlwZXMuT2JqZWN0SWQ7IC8vIFVzZXIgKHRlYWNoZXIpXG4gIG1vZGU6ICdsaW5rJyB8ICdjb3B5JztcbiAgY3JlYXRlZEF0OiBEYXRlO1xuICB1cGRhdGVkQXQ6IERhdGU7XG59XG5cbmNvbnN0IENsYXNzQ291cnNlQWNjZXNzU2NoZW1hID0gbmV3IFNjaGVtYTxJQ2xhc3NDb3Vyc2VBY2Nlc3M+KHtcbiAgY2xhc3M6IHsgdHlwZTogU2NoZW1hLlR5cGVzLk9iamVjdElkLCByZWY6ICdUZWFjaGVyQ2xhc3MnLCByZXF1aXJlZDogdHJ1ZSwgaW5kZXg6IHRydWUgfSxcbiAgY291cnNlOiB7IHR5cGU6IFNjaGVtYS5UeXBlcy5PYmplY3RJZCwgcmVmOiAnQ291cnNlJywgcmVxdWlyZWQ6IHRydWUsIGluZGV4OiB0cnVlIH0sXG4gIGVuYWJsZWRCeTogeyB0eXBlOiBTY2hlbWEuVHlwZXMuT2JqZWN0SWQsIHJlZjogJ1VzZXInLCByZXF1aXJlZDogdHJ1ZSwgaW5kZXg6IHRydWUgfSxcbiAgbW9kZTogeyB0eXBlOiBTdHJpbmcsIGVudW06IFsnbGluaycsJ2NvcHknXSwgZGVmYXVsdDogJ2xpbmsnIH0sXG4gIGNyZWF0ZWRBdDogeyB0eXBlOiBEYXRlLCBkZWZhdWx0OiBEYXRlLm5vdyB9LFxuICB1cGRhdGVkQXQ6IHsgdHlwZTogRGF0ZSwgZGVmYXVsdDogRGF0ZS5ub3cgfVxufSk7XG5cbi8vIHBybyBLbGFzc2UtS3VycyBudXIgZWlubWFsIHp1bGFzc2VuXG5DbGFzc0NvdXJzZUFjY2Vzc1NjaGVtYS5pbmRleCh7IGNsYXNzOiAxLCBjb3Vyc2U6IDEgfSwgeyB1bmlxdWU6IHRydWUgfSk7XG5cbkNsYXNzQ291cnNlQWNjZXNzU2NoZW1hLnByZSgnc2F2ZScsIGZ1bmN0aW9uKG5leHQpeyB0aGlzLnVwZGF0ZWRBdCA9IG5ldyBEYXRlKCk7IG5leHQoKTsgfSk7XG5DbGFzc0NvdXJzZUFjY2Vzc1NjaGVtYS5wcmUoJ2ZpbmRPbmVBbmRVcGRhdGUnLCBmdW5jdGlvbihuZXh0KXsgdGhpcy5zZXQoeyB1cGRhdGVkQXQ6IG5ldyBEYXRlKCkgfSk7IG5leHQoKTsgfSk7XG5cbnRyeSB7XG4gIGlmIChtb25nb29zZS5tb2RlbE5hbWVzKCkuaW5jbHVkZXMoJ0NsYXNzQ291cnNlQWNjZXNzJykpIHtcbiAgICBtb25nb29zZS5kZWxldGVNb2RlbCgnQ2xhc3NDb3Vyc2VBY2Nlc3MnKTtcbiAgfVxufSBjYXRjaCB7fVxuXG5leHBvcnQgZGVmYXVsdCBtb25nb29zZS5tb2RlbDxJQ2xhc3NDb3Vyc2VBY2Nlc3M+KCdDbGFzc0NvdXJzZUFjY2VzcycsIENsYXNzQ291cnNlQWNjZXNzU2NoZW1hKTtcbiJdLCJuYW1lcyI6WyJtb25nb29zZSIsIlNjaGVtYSIsIkNsYXNzQ291cnNlQWNjZXNzU2NoZW1hIiwiY2xhc3MiLCJ0eXBlIiwiVHlwZXMiLCJPYmplY3RJZCIsInJlZiIsInJlcXVpcmVkIiwiaW5kZXgiLCJjb3Vyc2UiLCJlbmFibGVkQnkiLCJtb2RlIiwiU3RyaW5nIiwiZW51bSIsImRlZmF1bHQiLCJjcmVhdGVkQXQiLCJEYXRlIiwibm93IiwidXBkYXRlZEF0IiwidW5pcXVlIiwicHJlIiwibmV4dCIsInNldCIsIm1vZGVsTmFtZXMiLCJpbmNsdWRlcyIsImRlbGV0ZU1vZGVsIiwibW9kZWwiXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./src/models/ClassCourseAccess.ts\n");

/***/ }),

/***/ "(rsc)/./src/models/Course.ts":
/*!******************************!*\
  !*** ./src/models/Course.ts ***!
  \******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var mongoose__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! mongoose */ \"mongoose\");\n/* harmony import */ var mongoose__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(mongoose__WEBPACK_IMPORTED_MODULE_0__);\n\nconst CourseSchema = new mongoose__WEBPACK_IMPORTED_MODULE_0__.Schema({\n    title: {\n        type: String,\n        required: true,\n        trim: true\n    },\n    description: {\n        type: String,\n        required: true\n    },\n    category: {\n        type: String,\n        required: true,\n        trim: true\n    },\n    tags: [\n        {\n            type: String,\n            trim: true\n        }\n    ],\n    author: {\n        type: String,\n        required: true\n    },\n    lessons: [\n        {\n            type: mongoose__WEBPACK_IMPORTED_MODULE_0__.Schema.Types.ObjectId,\n            ref: \"Lesson\"\n        }\n    ],\n    isPublished: {\n        type: Boolean,\n        default: false\n    },\n    progressionMode: {\n        type: String,\n        enum: [\n            'linear',\n            'free'\n        ],\n        default: 'free',\n        index: true\n    },\n    createdAt: {\n        type: Date,\n        default: Date.now\n    },\n    updatedAt: {\n        type: Date,\n        default: Date.now\n    }\n});\n// Häufige Filter: isPublished, category, author\nCourseSchema.index({\n    isPublished: 1,\n    createdAt: -1\n});\nCourseSchema.index({\n    category: 1\n});\nCourseSchema.index({\n    author: 1\n});\n// Update updatedAt before saving\nCourseSchema.pre(\"save\", function(next) {\n    this.updatedAt = new Date();\n    next();\n});\n// HMR/Dev: altes Modell verwerfen, damit Schema-Änderungen greifen\ntry {\n    const m = (mongoose__WEBPACK_IMPORTED_MODULE_0___default());\n    if (typeof m.deleteModel === 'function') {\n        m.deleteModel('Course');\n    } else if (m.models && m.models.Course) {\n        delete m.models.Course;\n    }\n} catch  {\n// ignore\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (mongoose__WEBPACK_IMPORTED_MODULE_0___default().model('Course', CourseSchema));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9zcmMvbW9kZWxzL0NvdXJzZS50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBc0Q7QUFldEQsTUFBTUUsZUFBdUIsSUFBSUQsNENBQU1BLENBQUM7SUFDdENFLE9BQU87UUFDTEMsTUFBTUM7UUFDTkMsVUFBVTtRQUNWQyxNQUFNO0lBQ1I7SUFDQUMsYUFBYTtRQUNYSixNQUFNQztRQUNOQyxVQUFVO0lBQ1o7SUFDQUcsVUFBVTtRQUNSTCxNQUFNQztRQUNOQyxVQUFVO1FBQ1ZDLE1BQU07SUFDUjtJQUNBRyxNQUFNO1FBQUM7WUFDTE4sTUFBTUM7WUFDTkUsTUFBTTtRQUNSO0tBQUU7SUFDRkksUUFBUTtRQUNOUCxNQUFNQztRQUNOQyxVQUFVO0lBQ1o7SUFDQU0sU0FBUztRQUFDO1lBQ1JSLE1BQU1ILDRDQUFNQSxDQUFDWSxLQUFLLENBQUNDLFFBQVE7WUFDM0JDLEtBQUs7UUFDUDtLQUFFO0lBQ0ZDLGFBQWE7UUFDWFosTUFBTWE7UUFDTkMsU0FBUztJQUNYO0lBQ0FDLGlCQUFpQjtRQUNmZixNQUFNQztRQUNOZSxNQUFNO1lBQUM7WUFBVTtTQUFPO1FBQ3hCRixTQUFTO1FBQ1RHLE9BQU87SUFDVDtJQUNBQyxXQUFXO1FBQ1RsQixNQUFNbUI7UUFDTkwsU0FBU0ssS0FBS0MsR0FBRztJQUNuQjtJQUNBQyxXQUFXO1FBQ1RyQixNQUFNbUI7UUFDTkwsU0FBU0ssS0FBS0MsR0FBRztJQUNuQjtBQUNGO0FBRUEsZ0RBQWdEO0FBQ2hEdEIsYUFBYW1CLEtBQUssQ0FBQztJQUFFTCxhQUFhO0lBQUdNLFdBQVcsQ0FBQztBQUFFO0FBQ25EcEIsYUFBYW1CLEtBQUssQ0FBQztJQUFFWixVQUFVO0FBQUU7QUFDakNQLGFBQWFtQixLQUFLLENBQUM7SUFBRVYsUUFBUTtBQUFFO0FBRS9CLGlDQUFpQztBQUNqQ1QsYUFBYXdCLEdBQUcsQ0FBQyxRQUFRLFNBQVNDLElBQUk7SUFDcEMsSUFBSSxDQUFDRixTQUFTLEdBQUcsSUFBSUY7SUFDckJJO0FBQ0Y7QUFFQSxtRUFBbUU7QUFDbkUsSUFBSTtJQUNGLE1BQU1DLElBQUk1QixpREFBUUE7SUFDbEIsSUFBSSxPQUFPNEIsRUFBRUMsV0FBVyxLQUFLLFlBQVk7UUFDdkNELEVBQUVDLFdBQVcsQ0FBQztJQUNoQixPQUFPLElBQUlELEVBQUVFLE1BQU0sSUFBSUYsRUFBRUUsTUFBTSxDQUFDQyxNQUFNLEVBQUU7UUFDdEMsT0FBTyxFQUFHRCxNQUFNLENBQTZCQyxNQUFNO0lBQ3JEO0FBQ0YsRUFBRSxPQUFNO0FBQ04sU0FBUztBQUNYO0FBRUEsaUVBQWUvQixxREFBYyxDQUFVLFVBQVVFLGFBQWFBLEVBQUMiLCJzb3VyY2VzIjpbIkQ6XFxsZXJuYXJlbmFcXHNyY1xcbW9kZWxzXFxDb3Vyc2UudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IG1vbmdvb3NlLCB7IFNjaGVtYSwgRG9jdW1lbnQgfSBmcm9tICdtb25nb29zZSc7XG5cbmV4cG9ydCBpbnRlcmZhY2UgSUNvdXJzZSBleHRlbmRzIERvY3VtZW50IHtcbiAgdGl0bGU6IHN0cmluZztcbiAgZGVzY3JpcHRpb246IHN0cmluZztcbiAgY2F0ZWdvcnk6IHN0cmluZztcbiAgdGFnczogc3RyaW5nW107XG4gIGF1dGhvcjogc3RyaW5nO1xuICBsZXNzb25zOiBzdHJpbmdbXTtcbiAgaXNQdWJsaXNoZWQ6IGJvb2xlYW47XG4gIHByb2dyZXNzaW9uTW9kZTogJ2xpbmVhcicgfCAnZnJlZSc7IC8vIGxpbmVhciA9IExla3Rpb24gZsO8ciBMZWt0aW9uLCBmcmVlID0gYmVsaWViaWdlIFJlaWhlbmZvbGdlXG4gIGNyZWF0ZWRBdDogRGF0ZTtcbiAgdXBkYXRlZEF0OiBEYXRlO1xufVxuXG5jb25zdCBDb3Vyc2VTY2hlbWE6IFNjaGVtYSA9IG5ldyBTY2hlbWEoe1xuICB0aXRsZToge1xuICAgIHR5cGU6IFN0cmluZyxcbiAgICByZXF1aXJlZDogdHJ1ZSxcbiAgICB0cmltOiB0cnVlXG4gIH0sXG4gIGRlc2NyaXB0aW9uOiB7XG4gICAgdHlwZTogU3RyaW5nLFxuICAgIHJlcXVpcmVkOiB0cnVlXG4gIH0sXG4gIGNhdGVnb3J5OiB7XG4gICAgdHlwZTogU3RyaW5nLFxuICAgIHJlcXVpcmVkOiB0cnVlLFxuICAgIHRyaW06IHRydWVcbiAgfSxcbiAgdGFnczogW3tcbiAgICB0eXBlOiBTdHJpbmcsXG4gICAgdHJpbTogdHJ1ZVxuICB9XSxcbiAgYXV0aG9yOiB7XG4gICAgdHlwZTogU3RyaW5nLFxuICAgIHJlcXVpcmVkOiB0cnVlXG4gIH0sXG4gIGxlc3NvbnM6IFt7XG4gICAgdHlwZTogU2NoZW1hLlR5cGVzLk9iamVjdElkLFxuICAgIHJlZjogXCJMZXNzb25cIlxuICB9XSxcbiAgaXNQdWJsaXNoZWQ6IHtcbiAgICB0eXBlOiBCb29sZWFuLFxuICAgIGRlZmF1bHQ6IGZhbHNlXG4gIH0sXG4gIHByb2dyZXNzaW9uTW9kZToge1xuICAgIHR5cGU6IFN0cmluZyxcbiAgICBlbnVtOiBbJ2xpbmVhcicsICdmcmVlJ10sXG4gICAgZGVmYXVsdDogJ2ZyZWUnLFxuICAgIGluZGV4OiB0cnVlXG4gIH0sXG4gIGNyZWF0ZWRBdDoge1xuICAgIHR5cGU6IERhdGUsXG4gICAgZGVmYXVsdDogRGF0ZS5ub3dcbiAgfSxcbiAgdXBkYXRlZEF0OiB7XG4gICAgdHlwZTogRGF0ZSxcbiAgICBkZWZhdWx0OiBEYXRlLm5vd1xuICB9XG59KTtcblxuLy8gSMOkdWZpZ2UgRmlsdGVyOiBpc1B1Ymxpc2hlZCwgY2F0ZWdvcnksIGF1dGhvclxuQ291cnNlU2NoZW1hLmluZGV4KHsgaXNQdWJsaXNoZWQ6IDEsIGNyZWF0ZWRBdDogLTEgfSk7XG5Db3Vyc2VTY2hlbWEuaW5kZXgoeyBjYXRlZ29yeTogMSB9KTtcbkNvdXJzZVNjaGVtYS5pbmRleCh7IGF1dGhvcjogMSB9KTtcblxuLy8gVXBkYXRlIHVwZGF0ZWRBdCBiZWZvcmUgc2F2aW5nXG5Db3Vyc2VTY2hlbWEucHJlKFwic2F2ZVwiLCBmdW5jdGlvbihuZXh0KSB7XG4gIHRoaXMudXBkYXRlZEF0ID0gbmV3IERhdGUoKTtcbiAgbmV4dCgpO1xufSk7XG5cbi8vIEhNUi9EZXY6IGFsdGVzIE1vZGVsbCB2ZXJ3ZXJmZW4sIGRhbWl0IFNjaGVtYS3DhG5kZXJ1bmdlbiBncmVpZmVuXG50cnkge1xuICBjb25zdCBtID0gbW9uZ29vc2UgYXMgdW5rbm93biBhcyB7IGRlbGV0ZU1vZGVsPzogKG5hbWU6IHN0cmluZykgPT4gdm9pZDsgbW9kZWxzPzogUmVjb3JkPHN0cmluZywgdW5rbm93bj4gfTtcbiAgaWYgKHR5cGVvZiBtLmRlbGV0ZU1vZGVsID09PSAnZnVuY3Rpb24nKSB7XG4gICAgbS5kZWxldGVNb2RlbCgnQ291cnNlJyk7XG4gIH0gZWxzZSBpZiAobS5tb2RlbHMgJiYgbS5tb2RlbHMuQ291cnNlKSB7XG4gICAgZGVsZXRlIChtLm1vZGVscyBhcyBSZWNvcmQ8c3RyaW5nLCB1bmtub3duPikuQ291cnNlO1xuICB9XG59IGNhdGNoIHtcbiAgLy8gaWdub3JlXG59XG5cbmV4cG9ydCBkZWZhdWx0IG1vbmdvb3NlLm1vZGVsPElDb3Vyc2U+KCdDb3Vyc2UnLCBDb3Vyc2VTY2hlbWEpO1xuIl0sIm5hbWVzIjpbIm1vbmdvb3NlIiwiU2NoZW1hIiwiQ291cnNlU2NoZW1hIiwidGl0bGUiLCJ0eXBlIiwiU3RyaW5nIiwicmVxdWlyZWQiLCJ0cmltIiwiZGVzY3JpcHRpb24iLCJjYXRlZ29yeSIsInRhZ3MiLCJhdXRob3IiLCJsZXNzb25zIiwiVHlwZXMiLCJPYmplY3RJZCIsInJlZiIsImlzUHVibGlzaGVkIiwiQm9vbGVhbiIsImRlZmF1bHQiLCJwcm9ncmVzc2lvbk1vZGUiLCJlbnVtIiwiaW5kZXgiLCJjcmVhdGVkQXQiLCJEYXRlIiwibm93IiwidXBkYXRlZEF0IiwicHJlIiwibmV4dCIsIm0iLCJkZWxldGVNb2RlbCIsIm1vZGVscyIsIkNvdXJzZSIsIm1vZGVsIl0sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./src/models/Course.ts\n");

/***/ }),

/***/ "(rsc)/./src/models/Lesson.ts":
/*!******************************!*\
  !*** ./src/models/Lesson.ts ***!
  \******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var mongoose__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! mongoose */ \"mongoose\");\n/* harmony import */ var mongoose__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(mongoose__WEBPACK_IMPORTED_MODULE_0__);\n\nconst QuestionSchema = new mongoose__WEBPACK_IMPORTED_MODULE_0__.Schema({\n    question: {\n        type: String,\n        required: true\n    },\n    mediaLink: {\n        type: String\n    },\n    correctAnswer: {\n        type: String\n    },\n    correctAnswers: [\n        {\n            type: String\n        }\n    ],\n    // Erlaube 0 falsche Antworten (z. B. bei MC mit ausschließlich korrekten Antworten)\n    wrongAnswers: {\n        type: [\n            String\n        ],\n        default: []\n    },\n    allAnswers: [\n        {\n            type: String,\n            required: true\n        }\n    ]\n});\nconst LessonSchema = new mongoose__WEBPACK_IMPORTED_MODULE_0__.Schema({\n    title: {\n        type: String,\n        required: true\n    },\n    courseId: {\n        type: String,\n        required: true\n    },\n    category: {\n        type: String,\n        trim: true\n    },\n    // Enum enthält \"snake\" (Legacy) und \"minigame\" (neu bevorzugt)\n    type: {\n        type: String,\n        required: true,\n        enum: [\n            \"single-choice\",\n            \"multiple-choice\",\n            \"text\",\n            \"video\",\n            \"markdown\",\n            \"matching\",\n            \"memory\",\n            \"lueckentext\",\n            \"ordering\",\n            \"text-answer\",\n            \"minigame\",\n            \"snake\"\n        ]\n    },\n    questions: [\n        QuestionSchema\n    ],\n    content: {\n        type: mongoose__WEBPACK_IMPORTED_MODULE_0__.Schema.Types.Mixed\n    },\n    isExercise: {\n        type: Boolean,\n        default: false\n    },\n    order: {\n        type: Number,\n        default: 0\n    },\n    createdAt: {\n        type: Date,\n        default: Date.now\n    },\n    updatedAt: {\n        type: Date,\n        default: Date.now\n    }\n});\n// Wichtige Abfragen: nach courseId sortiert nach order; gelegentlich nach type filterbar\nLessonSchema.index({\n    courseId: 1,\n    order: 1\n});\nLessonSchema.index({\n    courseId: 1,\n    type: 1\n});\nLessonSchema.index({\n    category: 1,\n    isExercise: 1\n});\nLessonSchema.pre('save', function(next) {\n    this.updatedAt = new Date();\n    next();\n});\nLessonSchema.pre('findOneAndUpdate', function(next) {\n    this.set({\n        updatedAt: new Date()\n    });\n    next();\n});\n// Wichtig für Next.js Dev/HMR: bestehendes Model verwerfen, damit Schema-Änderungen (enum) greifen\ntry {\n    if (mongoose__WEBPACK_IMPORTED_MODULE_0___default().modelNames().includes('Lesson')) {\n        mongoose__WEBPACK_IMPORTED_MODULE_0___default().deleteModel('Lesson');\n    }\n} catch  {\n// ignore\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (mongoose__WEBPACK_IMPORTED_MODULE_0___default().model('Lesson', LessonSchema));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9zcmMvbW9kZWxzL0xlc3Nvbi50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBc0Q7QUF5QnRELE1BQU1FLGlCQUFpQixJQUFJRCw0Q0FBTUEsQ0FBQztJQUNoQ0UsVUFBVTtRQUFFQyxNQUFNQztRQUFRQyxVQUFVO0lBQUs7SUFDekNDLFdBQVc7UUFBRUgsTUFBTUM7SUFBTztJQUMxQkcsZUFBZTtRQUFFSixNQUFNQztJQUFPO0lBQzlCSSxnQkFBZ0I7UUFBQztZQUFFTCxNQUFNQztRQUFPO0tBQUU7SUFDbEMsb0ZBQW9GO0lBQ3BGSyxjQUFjO1FBQUVOLE1BQU07WUFBQ0M7U0FBTztRQUFFTSxTQUFTLEVBQUU7SUFBQztJQUM1Q0MsWUFBWTtRQUFDO1lBQUVSLE1BQU1DO1lBQVFDLFVBQVU7UUFBSztLQUFFO0FBQ2hEO0FBRUEsTUFBTU8sZUFBdUIsSUFBSVosNENBQU1BLENBQUM7SUFDdENhLE9BQU87UUFBRVYsTUFBTUM7UUFBUUMsVUFBVTtJQUFLO0lBQ3RDUyxVQUFVO1FBQUVYLE1BQU1DO1FBQVFDLFVBQVU7SUFBSztJQUN6Q1UsVUFBVTtRQUFFWixNQUFNQztRQUFRWSxNQUFNO0lBQUs7SUFDckMsK0RBQStEO0lBQy9EYixNQUFNO1FBQUVBLE1BQU1DO1FBQVFDLFVBQVU7UUFBTVksTUFBTTtZQUFDO1lBQWlCO1lBQW1CO1lBQVE7WUFBUztZQUFZO1lBQVk7WUFBVTtZQUFlO1lBQVk7WUFBZTtZQUFZO1NBQVE7SUFBQztJQUNuTUMsV0FBVztRQUFDakI7S0FBZTtJQUMzQmtCLFNBQVM7UUFBRWhCLE1BQU1ILDRDQUFNQSxDQUFDb0IsS0FBSyxDQUFDQyxLQUFLO0lBQUM7SUFDcENDLFlBQVk7UUFBRW5CLE1BQU1vQjtRQUFTYixTQUFTO0lBQU07SUFDNUNjLE9BQU87UUFBRXJCLE1BQU1zQjtRQUFRZixTQUFTO0lBQUU7SUFDbENnQixXQUFXO1FBQUV2QixNQUFNd0I7UUFBTWpCLFNBQVNpQixLQUFLQyxHQUFHO0lBQUM7SUFDM0NDLFdBQVc7UUFBRTFCLE1BQU13QjtRQUFNakIsU0FBU2lCLEtBQUtDLEdBQUc7SUFBQztBQUM3QztBQUVBLHlGQUF5RjtBQUN6RmhCLGFBQWFrQixLQUFLLENBQUM7SUFBRWhCLFVBQVU7SUFBR1UsT0FBTztBQUFFO0FBQzNDWixhQUFha0IsS0FBSyxDQUFDO0lBQUVoQixVQUFVO0lBQUdYLE1BQU07QUFBRTtBQUMxQ1MsYUFBYWtCLEtBQUssQ0FBQztJQUFFZixVQUFVO0lBQUdPLFlBQVk7QUFBRTtBQUVoRFYsYUFBYW1CLEdBQUcsQ0FBQyxRQUFRLFNBQVNDLElBQUk7SUFBSSxJQUFJLENBQUNILFNBQVMsR0FBRyxJQUFJRjtJQUFRSztBQUFRO0FBQy9FcEIsYUFBYW1CLEdBQUcsQ0FBQyxvQkFBb0IsU0FBU0MsSUFBSTtJQUFJLElBQUksQ0FBQ0MsR0FBRyxDQUFDO1FBQUVKLFdBQVcsSUFBSUY7SUFBTztJQUFJSztBQUFRO0FBRW5HLG1HQUFtRztBQUNuRyxJQUFJO0lBQ0YsSUFBSWpDLDBEQUFtQixHQUFHb0MsUUFBUSxDQUFDLFdBQVc7UUFDNUNwQywyREFBb0IsQ0FBQztJQUN2QjtBQUNGLEVBQUUsT0FBTTtBQUNOLFNBQVM7QUFDWDtBQUVBLGlFQUFlQSxxREFBYyxDQUFVLFVBQVVhLGFBQWFBLEVBQUMiLCJzb3VyY2VzIjpbIkQ6XFxsZXJuYXJlbmFcXHNyY1xcbW9kZWxzXFxMZXNzb24udHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IG1vbmdvb3NlLCB7IFNjaGVtYSwgRG9jdW1lbnQgfSBmcm9tICdtb25nb29zZSc7XG5cbmV4cG9ydCBpbnRlcmZhY2UgSVF1ZXN0aW9uIHtcbiAgcXVlc3Rpb246IHN0cmluZztcbiAgbWVkaWFMaW5rPzogc3RyaW5nO1xuICBjb3JyZWN0QW5zd2VyPzogc3RyaW5nOyAvLyBTaW5nbGUtQ2hvaWNlXG4gIGNvcnJlY3RBbnN3ZXJzPzogc3RyaW5nW107IC8vIE11bHRpcGxlLUNob2ljZVxuICB3cm9uZ0Fuc3dlcnM6IHN0cmluZ1tdO1xuICBhbGxBbnN3ZXJzOiBzdHJpbmdbXTtcbn1cblxuZXhwb3J0IGludGVyZmFjZSBJTGVzc29uIGV4dGVuZHMgRG9jdW1lbnQge1xuICB0aXRsZTogc3RyaW5nO1xuICBjb3Vyc2VJZDogc3RyaW5nOyAvLyBlaW5kZXV0aWdlIEt1cnMtWnVvcmRudW5nIChcImV4ZXJjaXNlLXBvb2xcIiBmw7xyIFN0YW5kYWxvbmUtw5xidW5nKVxuICBjYXRlZ29yeT86IHN0cmluZzsgLy8gRmFjaC9LYXRlZ29yaWUgKGF1cyBLdXJzIMO8YmVybm9tbWVuIG9kZXIgYmVpIFN0YW5kYWxvbmUgZGlyZWt0IGdlc2V0enQpXG4gIC8vIEhpbndlaXM6IFwic25ha2VcIiBpc3QgZWluIExlZ2FjeS1BbGlhcyBmw7xyIFwibWluaWdhbWVcIiB1bmQgd2lyZCB3ZWl0ZXJoaW4gZ2VsZXNlbi5cbiAgdHlwZTogXCJzaW5nbGUtY2hvaWNlXCIgfCBcIm11bHRpcGxlLWNob2ljZVwiIHwgXCJ0ZXh0XCIgfCBcInZpZGVvXCIgfCBcIm1hcmtkb3duXCIgfCBcIm1hdGNoaW5nXCIgfCBcIm1lbW9yeVwiIHwgXCJsdWVja2VudGV4dFwiIHwgXCJvcmRlcmluZ1wiIHwgXCJ0ZXh0LWFuc3dlclwiIHwgXCJtaW5pZ2FtZVwiIHwgXCJzbmFrZVwiO1xuICBxdWVzdGlvbnM/OiBJUXVlc3Rpb25bXTtcbiAgY29udGVudD86IFJlY29yZDxzdHJpbmcsIHVua25vd24+O1xuICBpc0V4ZXJjaXNlPzogYm9vbGVhbjsgLy8gVHJ1ZSwgd2VubiBkaWVzZSBMZWt0aW9uIGF1Y2ggYWxzIGVpZ2Vuc3TDpG5kaWdlIMOcYnVuZyBnZWxpc3RldCB3ZXJkZW4gc29sbFxuICBvcmRlcjogbnVtYmVyO1xuICBjcmVhdGVkQXQ6IERhdGU7XG4gIHVwZGF0ZWRBdDogRGF0ZTtcbn1cblxuY29uc3QgUXVlc3Rpb25TY2hlbWEgPSBuZXcgU2NoZW1hKHtcbiAgcXVlc3Rpb246IHsgdHlwZTogU3RyaW5nLCByZXF1aXJlZDogdHJ1ZSB9LFxuICBtZWRpYUxpbms6IHsgdHlwZTogU3RyaW5nIH0sXG4gIGNvcnJlY3RBbnN3ZXI6IHsgdHlwZTogU3RyaW5nIH0sXG4gIGNvcnJlY3RBbnN3ZXJzOiBbeyB0eXBlOiBTdHJpbmcgfV0sXG4gIC8vIEVybGF1YmUgMCBmYWxzY2hlIEFudHdvcnRlbiAoei4gQi4gYmVpIE1DIG1pdCBhdXNzY2hsaWXDn2xpY2gga29ycmVrdGVuIEFudHdvcnRlbilcbiAgd3JvbmdBbnN3ZXJzOiB7IHR5cGU6IFtTdHJpbmddLCBkZWZhdWx0OiBbXSB9LFxuICBhbGxBbnN3ZXJzOiBbeyB0eXBlOiBTdHJpbmcsIHJlcXVpcmVkOiB0cnVlIH1dXG59KTtcblxuY29uc3QgTGVzc29uU2NoZW1hOiBTY2hlbWEgPSBuZXcgU2NoZW1hKHtcbiAgdGl0bGU6IHsgdHlwZTogU3RyaW5nLCByZXF1aXJlZDogdHJ1ZSB9LFxuICBjb3Vyc2VJZDogeyB0eXBlOiBTdHJpbmcsIHJlcXVpcmVkOiB0cnVlIH0sXG4gIGNhdGVnb3J5OiB7IHR5cGU6IFN0cmluZywgdHJpbTogdHJ1ZSB9LFxuICAvLyBFbnVtIGVudGjDpGx0IFwic25ha2VcIiAoTGVnYWN5KSB1bmQgXCJtaW5pZ2FtZVwiIChuZXUgYmV2b3J6dWd0KVxuICB0eXBlOiB7IHR5cGU6IFN0cmluZywgcmVxdWlyZWQ6IHRydWUsIGVudW06IFtcInNpbmdsZS1jaG9pY2VcIiwgXCJtdWx0aXBsZS1jaG9pY2VcIiwgXCJ0ZXh0XCIsIFwidmlkZW9cIiwgXCJtYXJrZG93blwiLCBcIm1hdGNoaW5nXCIsIFwibWVtb3J5XCIsIFwibHVlY2tlbnRleHRcIiwgXCJvcmRlcmluZ1wiLCBcInRleHQtYW5zd2VyXCIsIFwibWluaWdhbWVcIiwgXCJzbmFrZVwiXSB9LFxuICBxdWVzdGlvbnM6IFtRdWVzdGlvblNjaGVtYV0sXG4gIGNvbnRlbnQ6IHsgdHlwZTogU2NoZW1hLlR5cGVzLk1peGVkIH0sXG4gIGlzRXhlcmNpc2U6IHsgdHlwZTogQm9vbGVhbiwgZGVmYXVsdDogZmFsc2UgfSxcbiAgb3JkZXI6IHsgdHlwZTogTnVtYmVyLCBkZWZhdWx0OiAwIH0sXG4gIGNyZWF0ZWRBdDogeyB0eXBlOiBEYXRlLCBkZWZhdWx0OiBEYXRlLm5vdyB9LFxuICB1cGRhdGVkQXQ6IHsgdHlwZTogRGF0ZSwgZGVmYXVsdDogRGF0ZS5ub3cgfVxufSk7XG5cbi8vIFdpY2h0aWdlIEFiZnJhZ2VuOiBuYWNoIGNvdXJzZUlkIHNvcnRpZXJ0IG5hY2ggb3JkZXI7IGdlbGVnZW50bGljaCBuYWNoIHR5cGUgZmlsdGVyYmFyXG5MZXNzb25TY2hlbWEuaW5kZXgoeyBjb3Vyc2VJZDogMSwgb3JkZXI6IDEgfSk7XG5MZXNzb25TY2hlbWEuaW5kZXgoeyBjb3Vyc2VJZDogMSwgdHlwZTogMSB9KTtcbkxlc3NvblNjaGVtYS5pbmRleCh7IGNhdGVnb3J5OiAxLCBpc0V4ZXJjaXNlOiAxIH0pO1xuXG5MZXNzb25TY2hlbWEucHJlKCdzYXZlJywgZnVuY3Rpb24obmV4dCkgeyB0aGlzLnVwZGF0ZWRBdCA9IG5ldyBEYXRlKCk7IG5leHQoKTsgfSk7XG5MZXNzb25TY2hlbWEucHJlKCdmaW5kT25lQW5kVXBkYXRlJywgZnVuY3Rpb24obmV4dCkgeyB0aGlzLnNldCh7IHVwZGF0ZWRBdDogbmV3IERhdGUoKSB9KTsgbmV4dCgpOyB9KTtcblxuLy8gV2ljaHRpZyBmw7xyIE5leHQuanMgRGV2L0hNUjogYmVzdGVoZW5kZXMgTW9kZWwgdmVyd2VyZmVuLCBkYW1pdCBTY2hlbWEtw4RuZGVydW5nZW4gKGVudW0pIGdyZWlmZW5cbnRyeSB7XG4gIGlmIChtb25nb29zZS5tb2RlbE5hbWVzKCkuaW5jbHVkZXMoJ0xlc3NvbicpKSB7XG4gICAgbW9uZ29vc2UuZGVsZXRlTW9kZWwoJ0xlc3NvbicpO1xuICB9XG59IGNhdGNoIHtcbiAgLy8gaWdub3JlXG59XG5cbmV4cG9ydCBkZWZhdWx0IG1vbmdvb3NlLm1vZGVsPElMZXNzb24+KCdMZXNzb24nLCBMZXNzb25TY2hlbWEpO1xuIl0sIm5hbWVzIjpbIm1vbmdvb3NlIiwiU2NoZW1hIiwiUXVlc3Rpb25TY2hlbWEiLCJxdWVzdGlvbiIsInR5cGUiLCJTdHJpbmciLCJyZXF1aXJlZCIsIm1lZGlhTGluayIsImNvcnJlY3RBbnN3ZXIiLCJjb3JyZWN0QW5zd2VycyIsIndyb25nQW5zd2VycyIsImRlZmF1bHQiLCJhbGxBbnN3ZXJzIiwiTGVzc29uU2NoZW1hIiwidGl0bGUiLCJjb3Vyc2VJZCIsImNhdGVnb3J5IiwidHJpbSIsImVudW0iLCJxdWVzdGlvbnMiLCJjb250ZW50IiwiVHlwZXMiLCJNaXhlZCIsImlzRXhlcmNpc2UiLCJCb29sZWFuIiwib3JkZXIiLCJOdW1iZXIiLCJjcmVhdGVkQXQiLCJEYXRlIiwibm93IiwidXBkYXRlZEF0IiwiaW5kZXgiLCJwcmUiLCJuZXh0Iiwic2V0IiwibW9kZWxOYW1lcyIsImluY2x1ZGVzIiwiZGVsZXRlTW9kZWwiLCJtb2RlbCJdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./src/models/Lesson.ts\n");

/***/ }),

/***/ "(rsc)/./src/models/User.ts":
/*!****************************!*\
  !*** ./src/models/User.ts ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var mongoose__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! mongoose */ \"mongoose\");\n/* harmony import */ var mongoose__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(mongoose__WEBPACK_IMPORTED_MODULE_0__);\n\nconst UserSchema = new mongoose__WEBPACK_IMPORTED_MODULE_0__.Schema({\n    username: {\n        type: String,\n        required: true,\n        unique: true,\n        index: true\n    },\n    name: {\n        type: String,\n        required: true\n    },\n    password: {\n        type: String,\n        required: true\n    },\n    email: {\n        type: String,\n        trim: true\n    },\n    completedLessons: [\n        {\n            type: String\n        }\n    ],\n    stars: {\n        type: Number,\n        default: 0\n    },\n    role: {\n        type: String,\n        enum: [\n            'learner',\n            'author',\n            'admin',\n            'teacher',\n            'pending-author',\n            'pending-teacher'\n        ],\n        default: 'learner',\n        index: true\n    },\n    ownerTeacher: {\n        type: mongoose__WEBPACK_IMPORTED_MODULE_0__.Schema.Types.ObjectId,\n        ref: 'User',\n        index: true\n    },\n    class: {\n        type: mongoose__WEBPACK_IMPORTED_MODULE_0__.Schema.Types.ObjectId,\n        ref: 'TeacherClass',\n        index: true\n    },\n    createdAt: {\n        type: Date,\n        default: Date.now\n    },\n    updatedAt: {\n        type: Date,\n        default: Date.now\n    }\n});\nUserSchema.pre('save', function(next) {\n    this.updatedAt = new Date();\n    next();\n});\nUserSchema.pre('findOneAndUpdate', function(next) {\n    this.set({\n        updatedAt: new Date()\n    });\n    next();\n});\ntry {\n    if (mongoose__WEBPACK_IMPORTED_MODULE_0___default().modelNames().includes('User')) {\n        mongoose__WEBPACK_IMPORTED_MODULE_0___default().deleteModel('User');\n    }\n} catch  {}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (mongoose__WEBPACK_IMPORTED_MODULE_0___default().model('User', UserSchema));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9zcmMvbW9kZWxzL1VzZXIudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQXNEO0FBZ0J0RCxNQUFNRSxhQUFxQixJQUFJRCw0Q0FBTUEsQ0FBQztJQUNwQ0UsVUFBVTtRQUFFQyxNQUFNQztRQUFRQyxVQUFVO1FBQU1DLFFBQVE7UUFBTUMsT0FBTztJQUFLO0lBQ3BFQyxNQUFNO1FBQUVMLE1BQU1DO1FBQVFDLFVBQVU7SUFBSztJQUNyQ0ksVUFBVTtRQUFFTixNQUFNQztRQUFRQyxVQUFVO0lBQUs7SUFDekNLLE9BQU87UUFBRVAsTUFBTUM7UUFBUU8sTUFBTTtJQUFLO0lBQ2xDQyxrQkFBa0I7UUFBQztZQUFFVCxNQUFNQztRQUFPO0tBQUU7SUFDcENTLE9BQU87UUFBRVYsTUFBTVc7UUFBUUMsU0FBUztJQUFFO0lBQ2xDQyxNQUFNO1FBQUViLE1BQU1DO1FBQVFhLE1BQU07WUFBQztZQUFVO1lBQVM7WUFBUTtZQUFVO1lBQWlCO1NBQWtCO1FBQUVGLFNBQVM7UUFBV1IsT0FBTztJQUFLO0lBQ3ZJVyxjQUFjO1FBQUVmLE1BQU1ILDRDQUFNQSxDQUFDbUIsS0FBSyxDQUFDQyxRQUFRO1FBQUVDLEtBQUs7UUFBUWQsT0FBTztJQUFLO0lBQ3RFZSxPQUFPO1FBQUVuQixNQUFNSCw0Q0FBTUEsQ0FBQ21CLEtBQUssQ0FBQ0MsUUFBUTtRQUFFQyxLQUFLO1FBQWdCZCxPQUFPO0lBQUs7SUFDdkVnQixXQUFXO1FBQUVwQixNQUFNcUI7UUFBTVQsU0FBU1MsS0FBS0MsR0FBRztJQUFDO0lBQzNDQyxXQUFXO1FBQUV2QixNQUFNcUI7UUFBTVQsU0FBU1MsS0FBS0MsR0FBRztJQUFDO0FBQzdDO0FBRUF4QixXQUFXMEIsR0FBRyxDQUFDLFFBQVEsU0FBU0MsSUFBSTtJQUFHLElBQUksQ0FBQ0YsU0FBUyxHQUFHLElBQUlGO0lBQVFJO0FBQVE7QUFDNUUzQixXQUFXMEIsR0FBRyxDQUFDLG9CQUFvQixTQUFTQyxJQUFJO0lBQUcsSUFBSSxDQUFDQyxHQUFHLENBQUM7UUFBRUgsV0FBVyxJQUFJRjtJQUFPO0lBQUlJO0FBQVE7QUFFaEcsSUFBSTtJQUNGLElBQUk3QiwwREFBbUIsR0FBR2dDLFFBQVEsQ0FBQyxTQUFTO1FBQzFDaEMsMkRBQW9CLENBQUM7SUFDdkI7QUFDRixFQUFFLE9BQU0sQ0FBZTtBQUN2QixpRUFBZUEscURBQWMsQ0FBUSxRQUFRRSxXQUFXQSxFQUFDIiwic291cmNlcyI6WyJEOlxcbGVybmFyZW5hXFxzcmNcXG1vZGVsc1xcVXNlci50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgbW9uZ29vc2UsIHsgU2NoZW1hLCBEb2N1bWVudCB9IGZyb20gJ21vbmdvb3NlJztcblxuZXhwb3J0IGludGVyZmFjZSBJVXNlciBleHRlbmRzIERvY3VtZW50IHtcbiAgdXNlcm5hbWU6IHN0cmluZztcbiAgbmFtZTogc3RyaW5nO1xuICBwYXNzd29yZDogc3RyaW5nO1xuICBlbWFpbD86IHN0cmluZztcbiAgY29tcGxldGVkTGVzc29uczogc3RyaW5nW107XG4gIHN0YXJzOiBudW1iZXI7XG4gIHJvbGU6ICdsZWFybmVyJyB8ICdhdXRob3InIHwgJ2FkbWluJyB8ICd0ZWFjaGVyJyB8ICdwZW5kaW5nLWF1dGhvcicgfCAncGVuZGluZy10ZWFjaGVyJztcbiAgb3duZXJUZWFjaGVyPzogbW9uZ29vc2UuVHlwZXMuT2JqZWN0SWQ7IC8vIExlaHJlciwgZGVyIGRpZXNlbiBMZXJuZW5kZW4gYW5nZWxlZ3QgaGF0XG4gIGNsYXNzPzogbW9uZ29vc2UuVHlwZXMuT2JqZWN0SWQ7IC8vIEtsYXNzZSAoVGVhY2hlckNsYXNzKVxuICBjcmVhdGVkQXQ6IERhdGU7XG4gIHVwZGF0ZWRBdDogRGF0ZTtcbn1cblxuY29uc3QgVXNlclNjaGVtYTogU2NoZW1hID0gbmV3IFNjaGVtYSh7XG4gIHVzZXJuYW1lOiB7IHR5cGU6IFN0cmluZywgcmVxdWlyZWQ6IHRydWUsIHVuaXF1ZTogdHJ1ZSwgaW5kZXg6IHRydWUgfSxcbiAgbmFtZTogeyB0eXBlOiBTdHJpbmcsIHJlcXVpcmVkOiB0cnVlIH0sXG4gIHBhc3N3b3JkOiB7IHR5cGU6IFN0cmluZywgcmVxdWlyZWQ6IHRydWUgfSxcbiAgZW1haWw6IHsgdHlwZTogU3RyaW5nLCB0cmltOiB0cnVlIH0sXG4gIGNvbXBsZXRlZExlc3NvbnM6IFt7IHR5cGU6IFN0cmluZyB9XSxcbiAgc3RhcnM6IHsgdHlwZTogTnVtYmVyLCBkZWZhdWx0OiAwIH0sXG4gIHJvbGU6IHsgdHlwZTogU3RyaW5nLCBlbnVtOiBbJ2xlYXJuZXInLCdhdXRob3InLCdhZG1pbicsJ3RlYWNoZXInLCdwZW5kaW5nLWF1dGhvcicsJ3BlbmRpbmctdGVhY2hlciddLCBkZWZhdWx0OiAnbGVhcm5lcicsIGluZGV4OiB0cnVlIH0sXG4gIG93bmVyVGVhY2hlcjogeyB0eXBlOiBTY2hlbWEuVHlwZXMuT2JqZWN0SWQsIHJlZjogJ1VzZXInLCBpbmRleDogdHJ1ZSB9LFxuICBjbGFzczogeyB0eXBlOiBTY2hlbWEuVHlwZXMuT2JqZWN0SWQsIHJlZjogJ1RlYWNoZXJDbGFzcycsIGluZGV4OiB0cnVlIH0sXG4gIGNyZWF0ZWRBdDogeyB0eXBlOiBEYXRlLCBkZWZhdWx0OiBEYXRlLm5vdyB9LFxuICB1cGRhdGVkQXQ6IHsgdHlwZTogRGF0ZSwgZGVmYXVsdDogRGF0ZS5ub3cgfVxufSk7XG5cblVzZXJTY2hlbWEucHJlKCdzYXZlJywgZnVuY3Rpb24obmV4dCl7IHRoaXMudXBkYXRlZEF0ID0gbmV3IERhdGUoKTsgbmV4dCgpOyB9KTtcblVzZXJTY2hlbWEucHJlKCdmaW5kT25lQW5kVXBkYXRlJywgZnVuY3Rpb24obmV4dCl7IHRoaXMuc2V0KHsgdXBkYXRlZEF0OiBuZXcgRGF0ZSgpIH0pOyBuZXh0KCk7IH0pO1xuXG50cnkge1xuICBpZiAobW9uZ29vc2UubW9kZWxOYW1lcygpLmluY2x1ZGVzKCdVc2VyJykpIHtcbiAgICBtb25nb29zZS5kZWxldGVNb2RlbCgnVXNlcicpO1xuICB9XG59IGNhdGNoIHsgLyogaWdub3JlICovIH1cbmV4cG9ydCBkZWZhdWx0IG1vbmdvb3NlLm1vZGVsPElVc2VyPignVXNlcicsIFVzZXJTY2hlbWEpO1xuIl0sIm5hbWVzIjpbIm1vbmdvb3NlIiwiU2NoZW1hIiwiVXNlclNjaGVtYSIsInVzZXJuYW1lIiwidHlwZSIsIlN0cmluZyIsInJlcXVpcmVkIiwidW5pcXVlIiwiaW5kZXgiLCJuYW1lIiwicGFzc3dvcmQiLCJlbWFpbCIsInRyaW0iLCJjb21wbGV0ZWRMZXNzb25zIiwic3RhcnMiLCJOdW1iZXIiLCJkZWZhdWx0Iiwicm9sZSIsImVudW0iLCJvd25lclRlYWNoZXIiLCJUeXBlcyIsIk9iamVjdElkIiwicmVmIiwiY2xhc3MiLCJjcmVhdGVkQXQiLCJEYXRlIiwibm93IiwidXBkYXRlZEF0IiwicHJlIiwibmV4dCIsInNldCIsIm1vZGVsTmFtZXMiLCJpbmNsdWRlcyIsImRlbGV0ZU1vZGVsIiwibW9kZWwiXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./src/models/User.ts\n");

/***/ }),

/***/ "(ssr)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true!":
/*!******************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true! ***!
  \******************************************************************************************************/
/***/ (() => {



/***/ }),

/***/ "../app-render/after-task-async-storage.external":
/*!***********************************************************************************!*\
  !*** external "next/dist/server/app-render/after-task-async-storage.external.js" ***!
  \***********************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/after-task-async-storage.external.js");

/***/ }),

/***/ "./work-async-storage.external":
/*!*****************************************************************************!*\
  !*** external "next/dist/server/app-render/work-async-storage.external.js" ***!
  \*****************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/work-async-storage.external.js");

/***/ }),

/***/ "./work-unit-async-storage.external":
/*!**********************************************************************************!*\
  !*** external "next/dist/server/app-render/work-unit-async-storage.external.js" ***!
  \**********************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/work-unit-async-storage.external.js");

/***/ }),

/***/ "assert":
/*!*************************!*\
  !*** external "assert" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("assert");

/***/ }),

/***/ "buffer":
/*!*************************!*\
  !*** external "buffer" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("buffer");

/***/ }),

/***/ "crypto":
/*!*************************!*\
  !*** external "crypto" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("crypto");

/***/ }),

/***/ "events":
/*!*************************!*\
  !*** external "events" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("events");

/***/ }),

/***/ "http":
/*!***********************!*\
  !*** external "http" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("http");

/***/ }),

/***/ "https":
/*!************************!*\
  !*** external "https" ***!
  \************************/
/***/ ((module) => {

"use strict";
module.exports = require("https");

/***/ }),

/***/ "mongoose":
/*!***************************!*\
  !*** external "mongoose" ***!
  \***************************/
/***/ ((module) => {

"use strict";
module.exports = require("mongoose");

/***/ }),

/***/ "next/dist/compiled/next-server/app-page.runtime.dev.js":
/*!*************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-page.runtime.dev.js" ***!
  \*************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/next-server/app-page.runtime.dev.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "next/dist/shared/lib/no-fallback-error.external":
/*!******************************************************************!*\
  !*** external "next/dist/shared/lib/no-fallback-error.external" ***!
  \******************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/no-fallback-error.external");

/***/ }),

/***/ "next/dist/shared/lib/router/utils/app-paths":
/*!**************************************************************!*\
  !*** external "next/dist/shared/lib/router/utils/app-paths" ***!
  \**************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/router/utils/app-paths");

/***/ }),

/***/ "querystring":
/*!******************************!*\
  !*** external "querystring" ***!
  \******************************/
/***/ ((module) => {

"use strict";
module.exports = require("querystring");

/***/ }),

/***/ "url":
/*!**********************!*\
  !*** external "url" ***!
  \**********************/
/***/ ((module) => {

"use strict";
module.exports = require("url");

/***/ }),

/***/ "util":
/*!***********************!*\
  !*** external "util" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("util");

/***/ }),

/***/ "zlib":
/*!***********************!*\
  !*** external "zlib" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("zlib");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next","vendor-chunks/next-auth","vendor-chunks/@babel","vendor-chunks/jose","vendor-chunks/openid-client","vendor-chunks/bcryptjs","vendor-chunks/oauth","vendor-chunks/lru-cache","vendor-chunks/object-hash","vendor-chunks/preact","vendor-chunks/uuid","vendor-chunks/preact-render-to-string","vendor-chunks/cookie","vendor-chunks/@panva","vendor-chunks/oidc-token-hash"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fkurs%2F%5BcourseId%5D%2Flektionen%2Froute&page=%2Fapi%2Fkurs%2F%5BcourseId%5D%2Flektionen%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fkurs%2F%5BcourseId%5D%2Flektionen%2Froute.ts&appDir=D%3A%5Clernarena%5Csrc%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=D%3A%5Clernarena&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=standalone&preferredRegion=&middlewareConfig=e30%3D&isGlobalNotFoundEnabled=!")));
module.exports = __webpack_exports__;

})();